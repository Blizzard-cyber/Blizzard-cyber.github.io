{"title":"人工智能复习笔记","uid":"bfead0d4bc485b773913efadd71ce0ad","slug":"AIreview","date":"2023-03-16T09:59:30.000Z","updated":"2023-03-16T14:44:49.325Z","comments":true,"path":"api/articles/AIreview.json","keywords":null,"cover":"https://inst.eecs.berkeley.edu/~cs188/sp21/assets/images/cs188_bot.png","content":"<h1 id=\"第一部分-搜索问题\"><a href=\"#第一部分-搜索问题\" class=\"headerlink\" title=\"第一部分 搜索问题\"></a>第一部分 搜索问题</h1><p><strong>目录</strong></p>\n<p>​\t<a href=\"#%E5%89%8D%E8%A8%80\">前言</a></p>\n<p>​\t<a href=\"#%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%86%E5%8F%B2\">人工智能历史</a></p>\n<p>​\t<a href=\"#%E6%90%9C%E7%B4%A2%E9%97%AE%E9%A2%98\">搜索问题</a></p>\n<p>​\t\t<a href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E6%90%9C%E7%B4%A2%E9%97%AE%E9%A2%98%EF%BC%9F\">什么是搜索问题？</a></p>\n<p>​\t<a href=\"#%E4%B8%8D%E7%9F%A5%E6%83%85%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95%EF%BC%88Uninformed%20Search%EF%BC%89%C2%A0\">不知情搜索算法（Uninformed Search） </a></p>\n<p>​\t\t<a href=\"#%E4%B8%80%E4%BA%9B%E9%87%8D%E8%A6%81%E6%A6%82%E5%BF%B5\">一些重要概念</a></p>\n<p>​\t\t<a href=\"#%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%EF%BC%88DFS%EF%BC%89\">深度优先搜索（DFS）</a></p>\n<p>​\t\t<a href=\"#%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%EF%BC%88BFS%EF%BC%89%C2%A0\">广度优先搜索（BFS） </a></p>\n<p>​\t\t<a href=\"#%E4%BB%A3%E4%BB%B7%E6%95%8F%E6%84%9F%E6%90%9C%E7%B4%A2%EF%BC%88CCS%EF%BC%89%C2%A0\">代价敏感搜索（CCS） </a></p>\n<p>​\t\t<a href=\"#%E4%BB%A3%E4%BB%B7%E4%B8%80%E8%87%B4%E6%90%9C%E7%B4%A2%EF%BC%88UCS%EF%BC%89%C2%A0\">代价一致搜索（UCS） </a></p>\n<p>​\t<a href=\"#%E7%9F%A5%E6%83%85%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95%EF%BC%88Informed%20Search%EF%BC%89%C2%A0\">知情搜索算法（Informed Search） </a></p>\n<p>​\t\t<a href=\"#%E5%90%AF%E5%8F%91%E5%BC%8F%E6%90%9C%E7%B4%A2%EF%BC%88Heuristics%20Search%EF%BC%89%C2%A0\">启发式搜索（Heuristics Search） </a></p>\n<p>​\t\t<a href=\"#%E8%B4%AA%E5%BF%83%E6%90%9C%E7%B4%A2%EF%BC%88Greedy%20Search%EF%BC%89%C2%A0\">贪心搜索（Greedy Search） </a></p>\n<p>​\t\t<a href=\"#A*%E6%90%9C%E7%B4%A2\">A*搜索</a></p>\n<p>​\t\t<a href=\"#%E5%9B%BE%E6%90%9C%E7%B4%A2%EF%BC%88Graph%20Search%EF%BC%89%C2%A0\">图搜索（Graph Search） </a></p>\n<p>​\t\t<a href=\"#%E4%BE%8B%E9%A2%98\">例题</a></p>\n<p>​\t\t<a href=\"#%E5%AE%9E%E9%AA%8C%EF%BC%9AA*%E7%AE%97%E6%B3%95%E8%A7%A3%E5%86%B3%E5%85%AB%E6%95%B0%E7%A0%81%E9%97%AE%E9%A2%98\">实验：A*算法解决八数码问题</a></p>\n<p>​\t<a href=\"#%E5%AF%B9%E6%8A%97%E6%90%9C%E7%B4%A2\">对抗搜索</a></p>\n<p>​\t\t<a href=\"#%E9%9B%B6%E5%92%8C%E6%B8%B8%E6%88%8F%EF%BC%88Zero-sum%20Games%EF%BC%89\">零和游戏（Zero-sum Games）</a></p>\n<p>​\t\t<a href=\"#%E6%9E%81%E5%B0%8F%E5%8C%96%E6%9E%81%E5%A4%A7%E7%AE%97%E6%B3%95%EF%BC%88Minimax%20Algorithm%EF%BC%89\">极小化极大算法（Minimax Algorithm）</a></p>\n<p>​\t\t<a href=\"#Alpha-Beta%E5%89%AA%E6%9E%9D%E7%AE%97%E6%B3%95%EF%BC%88Alpha-Beta%20Pruning%EF%BC%89%C2%A0\">Alpha-Beta剪枝算法（Alpha-Beta Pruning） </a></p>\n<p>​\t\t<a href=\"#%E4%BE%8B%E9%A2%98%C2%A0\">例题</a></p>\n<hr>\n<h2 id=\"人工智能历史\"><a href=\"#人工智能历史\" class=\"headerlink\" title=\"人工智能历史\"></a>人工智能历史</h2><p><img src=\"https://img-blog.csdnimg.cn/5e07913b8a234d61a5d86d58ce0200cc.png\"></p>\n<hr>\n<h2 id=\"搜索问题\"><a href=\"#搜索问题\" class=\"headerlink\" title=\"搜索问题\"></a>搜索问题</h2><h3 id=\"什么是搜索问题？\"><a href=\"#什么是搜索问题？\" class=\"headerlink\" title=\"什么是搜索问题？\"></a>什么是搜索问题？</h3><p>​\t\t一个搜索问题包括一个状态空间，一个后续函数（包括动作，成本），一个开始状态和一个目标状态。</p>\n<p>​\t\t状态空间：当前“世界”所处的状态所有可能性的集合，假设整个状态空间是一段视频，那么状态就是视频的某一帧截图，它就是组成\t\t状态空间的一种可能。</p>\n<p>​\t\t后续函数：搜索问题的核心，它决定了代理下一步的动作是什么，也就是通过搜索算法来得出当前状态下如何决策是最符合预期的。\t\t后续函数中的参数必然含有动作和成本等协助判断的重要条件，通过这些条件就可以比对出当前状态下最好的决策。</p>\n<p>​\t\t解决方案：搜索问题的目标，是指将开始状态转换为目标状态的一系列操作（计划）。</p>\n<p>​\t<strong>计算状态空间的大小</strong></p>\n<p>将所有可能的环境&#x2F;动作全部相乘。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/f798aecccaed4ec9928d2d9918e238e9.png\"></p>\n<p>很好理解，总状态空间就是代理位置、食物数量、敌人位置、代理方向四个因素来决定，而代理位置有120种可能，每一颗食物有存在&#x2F;不存在两个状态，所以是2^30种可能，敌人有两个，一共有12种位置，所以敌人位置就有12^2种可能，代理的朝向有四种，就是4种可能。所以总状态空间的大小就是将它们相乘即可。 </p>\n<p><strong>状态空间图与决策树</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/c605910f06d64aac85878447c4b325c0.png\"></p>\n<p>搜索树中的每个节点都是状态空间图中的一个完整路径，两者都可以按需构建，还可以互相转化，例如根据状态空间图绘制决策树。</p>\n<p><strong>例：将图示状态空间图转化为决策树</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/445df56d9d5e446f8a547675a94cdf11.png\"></p>\n<p>我们引入两个列表：open_list 与 closed_list ，分别表示当前正在搜索的节点和已经搜索完毕的节点。open_list 初始只有起始状态S节点，而 closed_list 初始是空的。</p>\n<p>求解过程：（这里其实使用了<strong>广度优先搜索</strong>）<br><img src=\"C:\\Users\\tao020704\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230210194000345.png\" alt=\"image-20230210194000345\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/dc246fc9dd8940f58a4f8041d0eb45cc.png\"></p>\n<hr>\n<h2 id=\"不知情搜索算法（Uninformed-Search）\"><a href=\"#不知情搜索算法（Uninformed-Search）\" class=\"headerlink\" title=\"不知情搜索算法（Uninformed Search）\"></a>不知情搜索算法（Uninformed Search）</h2><h3 id=\"一些重要概念\"><a href=\"#一些重要概念\" class=\"headerlink\" title=\"一些重要概念\"></a>一些重要概念</h3><p>​\t完备：如果有解，<strong>一定能找到</strong></p>\n<p>​\t最优：保证能找到<strong>代价最小的</strong>路径</p>\n<p>​\t时间复杂度：算法中的<strong>基本操作的执行次数，为算法的时间复杂度</strong>。</p>\n<p>​\t空间复杂度：空间复杂度算的是<strong>变量的个数</strong></p>\n<h3 id=\"深度优先搜索（DFS）\"><a href=\"#深度优先搜索（DFS）\" class=\"headerlink\" title=\"深度优先搜索（DFS）\"></a>深度优先搜索（DFS）</h3><p><strong>从上到下，从左到右</strong></p>\n<p>边缘节点是后进先出的堆栈形式</p>\n<p><img src=\"https://img-blog.csdnimg.cn/091695d23f1d410a905f4f0badb09553.png\"></p>\n<p><strong>在有限状态空间中，DFS是完备的</strong></p>\n<p><strong>DFS不是最优的 （它只能找到解，在一定条件下也并不保证代价最小）</strong></p>\n<h3 id=\"广度优先搜索（BFS）\"><a href=\"#广度优先搜索（BFS）\" class=\"headerlink\" title=\"广度优先搜索（BFS）\"></a>广度优先搜索（BFS）</h3><p><strong>从左到右，从上到下</strong></p>\n<p>边缘节点是先进先出的队列形式</p>\n<p><img src=\"https://img-blog.csdnimg.cn/9b42517f180f4599b5d4521771412840.png\"></p>\n<p><strong>在有限状态空间中，BFS是完备的</strong></p>\n<p><strong>在动作未加权时，BFS是最优的</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">补充：迭代深化（Iterative Deepening）是旨在将DFS和BFS的优势结合在一起，既然BFS能够找到最浅的(最优的)解，而DFS可能会先找到较深的解，因此我们可以限制深度，先限制DFS的深度为3去搜索，如果没有找到就用最大深度为4的DFS去找，以此类推......这样就可以找到最浅的解从而节约算力。\n\t为什么？明明多次迭代，为何反而节约算力？这是因为**大量的计算通常在更深层**，我们在浅层多次迭代不会影响太多时间&#x2F;空间复杂度。</code></pre>\n\n<p> </p>\n<h3 id=\"代价敏感搜索（CCS）\"><a href=\"#代价敏感搜索（CCS）\" class=\"headerlink\" title=\"代价敏感搜索（CCS）\"></a>代价敏感搜索（CCS）</h3><p>如下图，如果使用上述方法，无论是DFS，BFS抑或是迭代深化，都只能得到经过节点最少的路径，但是如果<strong>每个动作标明代价（加权）</strong>的话，经过最少节点的路径就不一定是最优解了。因此，上述方法并不能在代价敏感搜索当中得到最优解，只能通过进一步计算，算出代价从而选出代价最小的路径来实现。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/c89a563bbb454df29d60727a2296e94b.png\"> </p>\n<p>如上图，一共能找到两条路径：SderfG，SerfG。然而代价却分别是3+2+2+2+2&#x3D;11和9+2+2+2&#x3D;15，<strong>反而是经过节点较多的SderfG为最优解！</strong></p>\n<h3 id=\"代价一致搜索（UCS）\"><a href=\"#代价一致搜索（UCS）\" class=\"headerlink\" title=\"代价一致搜索（UCS）\"></a>代价一致搜索（UCS）</h3><p><strong>优先扩展代价最小的节点</strong></p>\n<p><strong>（类似Dijkstra算法）</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/974c70e594004472816cab8f1eaf0121.png\"></p>\n<p>它是<strong>完备的且最优的</strong></p>\n<p><strong>但缺点是每个方向都可能扩展，且不知道目标的确切方向会显得盲目（不知情搜索&#x2F;Uninformed Search是这样的）</strong></p>\n<p>*<em>【解决方法：将UCS和Greedy（贪心算法）结合起来形成A&#x2F;<em>算法…下文会讲到】</em></em></p>\n<hr>\n<h2 id=\"知情搜索算法（Informed-Search）\"><a href=\"#知情搜索算法（Informed-Search）\" class=\"headerlink\" title=\"知情搜索算法（Informed Search）\"></a>知情搜索算法（Informed Search）</h2><p><img src=\"https://img-blog.csdnimg.cn/51db6c8c1db14450a163e0587fd5d9da.png\"></p>\n<p>如上图，知情搜索算法要讲解的分别为：启发式搜索，贪心搜索，A-star搜索，图搜索。</p>\n<h3 id=\"启发式搜索（Heuristics-Search）\"><a href=\"#启发式搜索（Heuristics-Search）\" class=\"headerlink\" title=\"启发式搜索（Heuristics Search）\"></a>启发式搜索（Heuristics Search）</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">一个启发式是：\n\n▪一个函数，估计一个状态与目标的距离\n\n▪为一个特定的搜索问题设计\n\n▪例子：曼哈顿距离，欧氏距离</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/2ee7ab8ba654412f83639981d0265bea.png\"></p>\n<p>如图，10+5就是曼哈顿距离：横坐标之差与纵坐标之差的和；11.2是欧氏距离：直线距离。</p>\n<p>这样的函数就叫作启发式函数，记作h(x)。 </p>\n<h3 id=\"贪心搜索（Greedy-Search）\"><a href=\"#贪心搜索（Greedy-Search）\" class=\"headerlink\" title=\"贪心搜索（Greedy Search）\"></a>贪心搜索（Greedy Search）</h3><p>**优先扩展当前状态下最优的节点 **</p>\n<p><img src=\"https://img-blog.csdnimg.cn/d0e3428711fa45f6804216cc2b23388e.png\"></p>\n<p>与UCS不同，UCS只考虑当前代价，而Greedy考虑了距离终点的距离。</p>\n<p><strong>它不是最佳的！</strong>通常它只考虑了距离而非代价，贪心算法的优劣很大程度上取决于启发式函数h(x)。 </p>\n<h3 id=\"A-搜索\"><a href=\"#A-搜索\" class=\"headerlink\" title=\"A*搜索\"></a>A*搜索</h3><p>A*搜索综合了UCS和Greedy，有两个评估函数g(x)与h(x)，而A&#x2F;*搜索的决策取决于f(x)&#x3D;g(x)+h(x)，综合考虑了前驱因素与后继因素。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/f436ae3bd74b481b87100a616d398482.png\"></p>\n<p><strong>A*是完备且最优的。当f(x)&#x3D;g(x)+0时就找到了最优解。</strong></p>\n<p><strong>【但这里有一个大前提】：那就是估计节点到终点的距离时（h(x)）一定要小于等于实际中s点到终点的距离才行，这叫做可采纳的试探（Admissible Heuristics）</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/86f0a9506d3c41c086e0246560b4e4d8.png\"></p>\n<p> 例如下图：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/52f669b39568488cbb05be05d5e029b6.png\"></p>\n<p>因此，提出一个可接受的启发式方法是A*算法的需要解决的重要内容（实际上上文提到过的曼哈顿距离和欧氏距离就是很好的启发式方法）。 </p>\n<p>总结：</p>\n<ol>\n<li><p>A*用前驱和（估计的）后继成本来决策；</p>\n</li>\n<li><p>A*在可接受的启发式方法下是最优的；</p>\n</li>\n<li><p>启发式设计是关键所在，常用于宽松问题（Relaxed Problems）</p>\n</li>\n</ol>\n<h3 id=\"图搜索（Graph-Search）\"><a href=\"#图搜索（Graph-Search）\" class=\"headerlink\" title=\"图搜索（Graph Search）\"></a>图搜索（Graph Search）</h3><p><strong>一种在图中寻找路径的方法。</strong></p>\n<p>o 图中每个节点对应状态空间中的一个状态 ;<br>o 每条连线对应一个操作符 ( 多数包含它的代价 ) 。** </p>\n<p> <strong>常用开关列表来解决问题：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1) 建立一个只含有 起始节点 S 的 搜索图 G ， 把 S 放到一个叫做 OPEN 的未扩展节点表中\n2) 建立一个叫做 CLOSED 的已扩展节点表， 其 初始为空表\n3)LOOP ：若 OPEN 表是空表，则失败退出\n4) 选择 OPEN 表上的第一个节点 , 把它从 OPEN 表移出并放进 CLOSED 表中。称此节点为 节点 n\n5) 若 n 为 目标节点， 则有解并成功退出，此解是追踪图 G 中沿着指针从 n 到 S 这条路径而得到的 ( 指针将在第 7 步中设置 )\n6) 扩展 节点 n ，同时 生成不是 n 的祖先的那些后继节点 的 集合 M 。把 M 的这些成员作为 n 的后继节点添入 图 G 中\n7) 生成并记入 M 的子节点有以下三种情况：\n① 未曾在G中出现过 的每个M成员：设置一个通向n的指针，并把它们加进OPEN表\n② 已经在OPEN表上 的每一个M成员，确定是否需更改通到n的指针方向。\n③ 已在CLOSED表上 的每一个M成员：除需确定该子节点指向父节点的指针外，还需确定其后继节点指向 父节点 的指针(也就是，如该子节点的父节点根据需要(如代价值等)改变了，那就把该子节点 移回Open表 )\n8) 按某一任意方式或按某个探试值， 重排 OPEN 表\n9)GO LOOP</code></pre>\n\n<p>** **<br><img src=\"https://img-blog.csdnimg.cn/9311c1a19bce4c6faf0e95c1b5b657a6.png\"></p>\n<h3 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h3><p>用要求的五种搜索算法计算从A到E的最优路径</p>\n<p><img src=\"https://img-blog.csdnimg.cn/ba625dabb7b5443e8707901a74a9c118.png\"> 解：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/9c3978755b13469998af591750b44520.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/a1f9ef872d004b5da0a1d221aa4c2ed6.png\"><img src=\"https://img-blog.csdnimg.cn/0dde9541023a49efab0e7617510b0f6c.png\"><img src=\"https://img-blog.csdnimg.cn/196dc5bf0f0e46fd9a300f80aa14919b.png\"><img src=\"https://img-blog.csdnimg.cn/ae7b4a2c9259489184090f09db9d198d.png\"></p>\n<h3 id=\"实验：A-算法解决八数码问题\"><a href=\"#实验：A-算法解决八数码问题\" class=\"headerlink\" title=\"实验：A*算法解决八数码问题\"></a>实验：A*算法解决八数码问题</h3><p>八数码问题是在 3×3 的九宫格棋盘上，摆有 8 个刻有 1 ～ 8 数码的将牌。棋盘中有一个空格，允许紧邻空格的某一将牌可以移到空格中，这样通过平移将牌可以将某一将牌布局变换为另一布局。针对给定的一种初始布局或结构（目标状态），问如何移动将牌，实现从初始状态到目标状态的转变。如下图表示了一个具体的八数码问题求解。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/c0e397c0b3034807aed8ac73931ce68e.png\"><br>解：</p>\n<ul>\n<li>选用已经走过的步数为g(n)，选择当前状态与目标状态相异的数字的曼哈顿距离之和为h(n)，得到**估价函数f(n)&#x3D;g(n)+h(n)**。</li>\n<li>选用<strong>open表与close表</strong>来维护状态图，如果当前状态已经在开&#x2F;关列表中，取最小的一个保留。每次都选当前f(n)最小的作为待搜索节点。</li>\n<li><strong>判断无解情况：将当前状态与目标状态的九宫格转化为线性，分别计算逆序数的个数，如果逆序数奇偶性一致则有解，反之则无解。</strong></li>\n</ul>\n<hr>\n<h2 id=\"对抗搜索\"><a href=\"#对抗搜索\" class=\"headerlink\" title=\"对抗搜索\"></a>对抗搜索</h2><h3 id=\"零和游戏（Zero-sum-Games）\"><a href=\"#零和游戏（Zero-sum-Games）\" class=\"headerlink\" title=\"零和游戏（Zero-sum Games）\"></a><strong>零和游戏（Zero-sum Games）</strong></h3><ol>\n<li><p>代理有着相反的目标</p>\n</li>\n<li><p>一个代理的分数高，另一个的分数就会必然变低</p>\n</li>\n</ol>\n<h3 id=\"极小化极大算法（Minimax-Algorithm）\"><a href=\"#极小化极大算法（Minimax-Algorithm）\" class=\"headerlink\" title=\"极小化极大算法（Minimax Algorithm）\"></a>极小化极大算法（Minimax Algorithm）</h3><p>Minimax算法又名极小化极大算法，是一种找出失败的最大可能性中的最小值的算法。Minimax算法常用于棋类等由两方较量的游戏和程序，这类程序由两个游戏者轮流，每次执行一个步骤。我们众所周知的五子棋、象棋等都属于这类程序，所以说Minimax算法是基于搜索的博弈算法的基础。该算法是一种<strong>零总和算法，即一方要在可选的选项中选择将其优势最大化的选择，而另一方则选择令对手优势最小化的方法。</strong></p>\n<p>Minimax是一种悲观算法，即假设对手每一步都会将我方引入从当前看理论上价值最小的格局方向，即对手具有完美决策能力。因此<strong>我方的策略应该是选择那些对方所能达到的让我方最差情况中最好的，也就是让对方在完美决策下所对我造成的损失最小</strong>。</p>\n<p><strong>例子：</strong></p>\n<p>现在考虑这样一个游戏：有三个盘子A、B和C，每个盘子分别放有三张纸币。A放的是1、20、50；B放的是5、10、100；C放的是1、5、20。单位均为“元”。有甲、乙两人，两人均对三个盘子和上面放置的纸币有可以任意查看。游戏分三步：</p>\n<ol>\n<li>甲从三个盘子中选取一个。</li>\n<li>乙从甲选取的盘子中拿出两张纸币交给甲。</li>\n<li>甲从乙所给的两张纸币中选取一张，拿走。</li>\n</ol>\n<p>其中甲的目标是最后拿到的纸币面值尽量大，乙的目标是让甲最后拿到的纸币面值尽量小。</p>\n<p>解：由于示例问题格局数非常少，我们可以给出完整的格局树。这种情况下我可以找到Minimax算法的全局最优解。而真实情况中，格局树非常庞大，即使是计算机也不可能给出完整的树，因此我们往往只搜索一定深度，这时只能找到局部最优解。</p>\n<p>正方形表示甲决策（挑选最大），三角形表示乙决策（挑选最小）：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/8367a3d21c194487a590be613f8083d7.png\"><img src=\"https://img-blog.csdnimg.cn/2a90294ec7e34942901e06a687c8316a.png\"><img src=\"https://img-blog.csdnimg.cn/ea8abeabef8048108be1b912f164493c.png\">最终甲期望得到的纸币面值为20，所以他应当选1号盘子为最优决策。 <br>总结一下Minimax算法的步骤：</p>\n<ol>\n<li>首先确定最大搜索深度D，D可能达到终局，也可能是一个中间格局。</li>\n<li>在最大深度为D的格局树叶子节点上，使用预定义的价值评价函数对叶子节点价值进行评价。</li>\n<li><strong>自底向上</strong>为非叶子节点赋值。其中max节点取子节点最大值，min节点取子节点最小值。</li>\n<li>每次轮到我方时（此时必处在格局树的某个max节点），选择价值等于此max节点价值的那个子节点路径。</li>\n</ol>\n<p>注意：</p>\n<ul>\n<li>真实问题一般无法构造出完整的格局树，所以需要<strong>确定一个最大深度D</strong>，每次最多从当前格局向下计算D层。</li>\n<li>因为上述原因，Minimax<strong>一般是寻找一个局部最优解</strong>而不是全局最优解，搜索深度越大越可能找到更好的解，但计算耗时会呈指数级膨胀。</li>\n<li>也是因为无法一次构造出完整的格局树，所以真实问题中Minimax一般是边对弈边计算<strong>局部格局树</strong>，而不是只计算一次，但已计算的中间结果可以缓存。</li>\n</ul>\n<h3 id=\"Alpha-Beta剪枝算法（Alpha-Beta-Pruning）\"><a href=\"#Alpha-Beta剪枝算法（Alpha-Beta-Pruning）\" class=\"headerlink\" title=\"Alpha-Beta剪枝算法（Alpha-Beta Pruning）\"></a>Alpha-Beta剪枝算法（Alpha-Beta Pruning）</h3><p>剪枝算法规则：</p>\n<p><strong>1. Max层的α &#x3D; max(α， 它的所有子结点的评价值)，Max层的β &#x3D; 它的父结点的β<br>2. Min层的β &#x3D; min(β， 它的所有子结点的评价值)，Min层的 α &#x3D; 它的父结点的α<br>3. 当某个结点的 α &gt;&#x3D; β，停止搜索该节点的其他子结点<br>4. 叶结点没有 α 和 β</strong> </p>\n<p>它极大减小了时间复杂度，在深层的搜索中减少了计算的负担。</p>\n<p>我们一一说明这四条性质：<br>首先我们假设所有非叶结点的α初始化为负无穷，β初始化为正无穷。</p>\n<ol>\n<li>若Max层中发现有一个子结点的评价值比当前所能达到的评价值更大，换句话说就是<strong>子结点的操作更优，那么将当前所能达到的评价值换成该子节点的评价值</strong>。并且由于它的父结点是从该Max层中选择最小的评价值，那么他就要判断一下当前的α是否大于它父结点的β。为了方便起见，我们将父结点的β赋给它自己的β，这样我们只需要比较它自己的α和β就可以了。</li>\n<li>跟第一条类似，如果发现子结点中有比当前更优的操作（对对手更优，即对自己更差），那么就替换β，同时比较父结点最优解与当前解的大小，如果父结点已经有一个更优解，则不必继续搜索了。</li>\n<li>Max层中，若某个结点的最优解已经大于它的父结点的最差解，则不必继续搜索，剪枝；Min层中，若某个结点的最差解已经小于它的父结点的最优解，则不必继续搜索，剪枝。</li>\n<li>由于叶结点没有子结点，自然不需要计算 α 和 β。</li>\n</ol>\n<h3 id=\"例题-1\"><a href=\"#例题-1\" class=\"headerlink\" title=\"例题\"></a>例题</h3><p><img src=\"https://img-blog.csdnimg.cn/0008c04c2bf04d379451e224b6903ac7.png\"></p>\n<p>解：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/e0239add71f948a5ad34b19b55cf6ca4.png\"><img src=\"https://img-blog.csdnimg.cn/cff8f0f81050441aaf8e0841f0420453.png\"><img src=\"https://img-blog.csdnimg.cn/df483ab459fe405184de93a6e6ec65d7.png\"></p>\n<hr>\n<h1 id=\"第二部分-MDP和强化学习\"><a href=\"#第二部分-MDP和强化学习\" class=\"headerlink\" title=\"第二部分 MDP和强化学习\"></a>第二部分 MDP和强化学习</h1><p><strong>目录</strong></p>\n<p>​\t<a href=\"#%E5%89%8D%E8%A8%80\">前言</a></p>\n<p>​\t<a href=\"#%E6%9C%9F%E6%9C%9B%E6%9C%80%E5%A4%A7%E6%90%9C%E7%B4%A2%EF%BC%88Expectimax%20Search%EF%BC%89\">期望最大搜索（Expectimax Search）</a></p>\n<p>​\t<a href=\"#%E2%AD%90%E9%A9%AC%E5%B0%94%E7%A7%91%E5%A4%AB%E5%86%B3%E7%AD%96%EF%BC%88MDP%EF%BC%89%E2%80%94%E2%80%94offline%EF%BC%88%E8%B6%85%E9%87%8D%E7%82%B9%EF%BC%89\">⭐马尔科夫决策（MDP）——offline（超重点）</a></p>\n<p>​\t\t<a href=\"#%E5%85%88%E6%9D%A5%E7%9C%8B%E4%B8%80%E4%B8%AA%E4%BE%8B%E5%AD%90\">先来看一个例子</a></p>\n<p>​\t\t<a href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%C2%A0\">基本概念 </a></p>\n<p>​\t\t\t<a href=\"#%E6%94%BF%E7%AD%96%EF%BC%88Policy%EF%BC%89\">政策（Policy）</a></p>\n<p>​\t\t\t<a href=\"#%E6%8A%98%E6%89%A3%EF%BC%88Discounting%EF%BC%89\">折扣（Discounting）</a></p>\n<p>​\t\t\t<a href=\"#%E5%A6%82%E4%BD%95%E5%81%9C%E6%AD%A2%E5%BE%AA%E7%8E%AF%EF%BC%9F\">如何停止循环？</a></p>\n<p>​\t\t\t<a href=\"#%E4%BB%B7%E5%80%BC%E8%BF%AD%E4%BB%A3%EF%BC%88Value%20Iteration%EF%BC%89%C2%A0\">价值迭代（Value Iteration） </a></p>\n<p>​\t\t\t<a href=\"#%E4%BE%8B%E9%A2%98%C2%A0\">例题 </a></p>\n<p>​\t\t<a href=\"#%E5%9B%BA%E5%AE%9A%E7%AD%96%E7%95%A5%20Fixed%20Policies\">固定策略（Fixed Policies）</a></p>\n<p>​\t\t<a href=\"#%E7%AD%96%E7%95%A5%E6%8F%90%E5%8F%96%20Policy%20Extraction\">策略提取（Policy Extraction）</a></p>\n<p>​\t\t<a href=\"#%C2%A0%E7%AD%96%E7%95%A5%E8%BF%AD%E4%BB%A3%C2%A0Policy%20Iteration\">策略迭代（Policy Iteration）</a></p>\n<p>​\t\t<a href=\"#%C2%A0%E7%AD%96%E7%95%A5%E8%BF%AD%E4%BB%A3%E5%92%8C%E4%BB%B7%E5%80%BC%E8%BF%AD%E4%BB%A3%E7%9A%84%E6%AF%94%E8%BE%83\">策略迭代和价值迭代的比较</a></p>\n<p>​\t<a href=\"#%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%88Reinforcement%20Learning,%20RL%EF%BC%89%E2%80%94%E2%80%94online\">强化学习（Reinforcement Learning, RL）——online</a></p>\n<p>​\t\t<a href=\"#%E7%AE%80%E4%BB%8B\">简介</a></p>\n<p>​\t\t<a href=\"#%E5%9F%BA%E4%BA%8E%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%88Model-Based%20RL%EF%BC%8CMBRL%EF%BC%89\">基于模型的强化学习（Model-Based RL，MBRL）</a></p>\n<p>​\t\t<a href=\"#%E6%97%A0%E6%A8%A1%E5%9E%8B%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%88Model-Free%20RL%EF%BC%8CMFRL%EF%BC%89\">无模型强化学习（Model-Free RL，MFRL）</a></p>\n<p>​\t\t\t<a href=\"#%E7%9B%B4%E6%8E%A5%E8%AF%84%E4%BC%B0(Direct%20Evaluation)\">直接评估(Direct Evaluation)</a></p>\n<p>​\t\t\t<a href=\"#%E6%97%B6%E9%97%B4%E5%B7%AE%E5%88%86%E5%AD%A6%E4%B9%A0(Temporal%20Difference%20Learning)\">时间差分学习(Temporal Difference Learning)</a></p>\n<p>​\t\t<a href=\"#%E4%B8%BB%E5%8A%A8%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%C2%A0Active%20Reinforcement%20Learning\">主动强化学习（Active Reinforcement Learning）</a></p>\n<p>​\t\t\t<a href=\"#Q-Learning%C2%A0\">Q-Learning </a></p>\n<p>​\t\t\t<a href=\"#%E6%8E%A2%E7%B4%A2%E4%B8%8E%E5%88%A9%E7%94%A8%C2%A0\">探索与利用 </a></p>\n<hr>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>在<a href=\"https://blog.csdn.net/m0_59180666/article/details/128922536?spm=1001.2014.3001.5501\" title=\"上一节\">上一节</a>中，我们提到了Minimax是一种悲观算法，即考虑最坏的情况（Worst Case）从而使损失最小化。然而在实际操作过程中，对手并不是始终能做到最优决策，会有一定概率的失误，因此我们应当计算平均能得到的分数。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/792487c16df3472cb2b3474b4c61c5c3.png\"></p>\n<p>当不确定的结果会偶然出现时，也就是在不确定性搜索（Non-Deterministic Search）下，我们的算法就需要做出调整。</p>\n<hr>\n<h1 id=\"期望最大搜索（Expectimax-Search）\"><a href=\"#期望最大搜索（Expectimax-Search）\" class=\"headerlink\" title=\"期望最大搜索（Expectimax Search）\"></a>期望最大搜索（Expectimax Search）</h1><p>在前言的条件下，对手不一定足够smart去得到最优解，因此，我们将对手节点视作chance nodes，它具有一定的概率去实行一定的策略，此时的策略是使得expected utility最大。值现在应该反映平均情况（预期）结果，而不是最坏情况（最小）结果。上一节提到的minimax实际上是expected max的一种概率为1或0的特例。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">▪期望搜索：计算平均分数下最优玩法\n\n▪最大节点和Minimax一致\n\n▪机会节点类似Minimax的最小节点但结果不确定\n\n▪计算他们的预期效用\n\n▪即加权平均（期望）子节点\n\n注意：在expectimax中最好不要进行剪枝操作，因为min层的计算需要依据下一层的每一个值（如果概率不是非0即1那种）\n\n选择minimax策略的agent总是过于悲观，因此分数不会太高，但胜率会很高；而选择expectimax策略的agent过于乐观（比如万一有一种情况分数很高但概率相对不高，在计算的结果中，导致此算出来的期望值很高，agent会选择这种策略，但事实上，opponent很有可能选择其他路并且令agent分数减少）</code></pre>\n\n\n\n<hr>\n<h1 id=\"⭐马尔科夫决策（MDP）——offline（超重点）\"><a href=\"#⭐马尔科夫决策（MDP）——offline（超重点）\" class=\"headerlink\" title=\"⭐马尔科夫决策（MDP）——offline（超重点）\"></a>⭐马尔科夫决策（MDP）——offline（超重点）</h1><p>MDP是一个<strong>五元组</strong>&lt;S，A，T，R，γ&gt;——<strong>状态空间、行为、状态转移概率、奖励、折扣因子</strong></p>\n<h2 id=\"先来看一个例子\"><a href=\"#先来看一个例子\" class=\"headerlink\" title=\"先来看一个例子\"></a>先来看一个例子</h2><p><img src=\"https://img-blog.csdnimg.cn/8b5da30439e142348024d4c9dd88b2d6.png\"></p>\n<p>只有一个主体，存在障碍，惩罚出口和奖励出口，主体可以任意移动但是有概率出现偏差移动，如果移动碰到墙体则呆在原地，每行动一步会有小的存活奖励（正&#x2F;负&#x2F;0都可）.。</p>\n<p>我们的目标是使主体得到的分数最大化。 </p>\n<p>如下图，以前的决策是左边的情况，而现在要解决的是随机问题</p>\n<p><img src=\"https://img-blog.csdnimg.cn/3ae40ecee36349fbb15e7e739ac8b591.png\"></p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><p>这就要用到<strong>马尔科夫决策过程（MDP）</strong>：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">MDP定义为：\n\n▪一组状态集S\n\n▪一组动作集A\n\n▪一个过渡函数T（s,a,s&#39;）\n\n        ▪从状态s到状态s&#39;的概率，例如，P（s&#39;|s, a）\n\n        ▪也称为模型或动态\n\n▪奖励函数R（s,a,s&#39;）\n\n        ▪有时只是R (s)或R (s&#39;)\n\n▪一个起始状态\n\n▪也许存在结束状态\n\n▪马尔科夫决策过程，“马尔科夫”意味着行动结果只取决于当前状态\n\n▪这就类似搜索，后继函数只能取决于当前状态（而非历史状态）\n\n▪MDPs是**非确定性搜索问题**\n\n▪解决它们的一种方法是**期望最大搜索</code></pre>\n\n<h3 id=\"政策（Policy）\"><a href=\"#政策（Policy）\" class=\"headerlink\" title=\"政策（Policy）\"></a>政策（Policy）</h3><p>在确定性单代理搜索问题，我们想要一个从起始节点到目标节点的最优计划，或序列的行动。</p>\n<p>在MDP中，我们需要一个最优政策<img src=\"https://latex.codecogs.com/gif.latex?%5Cpi%20%5E%7B*%7D:S%5Crightarrow%20A\" alt=\"\\pi ^{*}:S\\rightarrow A\">，它在每一个状态下都给出一个动作，并且尝试在最后得到最大的效益，显式的策略定义了主体的反应倾向，如下图：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/6c7032c7c06746b6adc3e304eb55bb66.png\"></p>\n<p>能观察到，在不同的生存奖励下，主体的行动倾向都有所不同。 </p>\n<h3 id=\"折扣（Discounting）\"><a href=\"#折扣（Discounting）\" class=\"headerlink\" title=\"折扣（Discounting）\"></a>折扣（Discounting）</h3><p>如上图，当生存奖励的负分偏小时，在更为危险的地块中agent会宁愿选择一直对墙试错从而让自己滑行到两侧而非冒险按正确的朝向走，这可能会与我们的实际预期不符，因为它走做了太多无用的动作。这时我们就要给奖励添加折扣，让agent尽可能快的拿到最大的奖励：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">▪最大化奖励的总和是合理的\n\n▪更喜欢马上获得的奖励而非以后的奖励也是合理的\n\n▪一个解决方案：奖励的值呈指数衰减</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/3e1a69ad776949748cf08ff38fdcba8e.png\"></p>\n<p>例如，折扣为0.5时，U([1,2,3]) &lt; U([3,2,1])。</p>\n<p>**U([1,2,3]) &#x3D; 1&#x2F;*1 + 0.5&#x2F;*2 + 0.25&#x2F;*3；U([3,2,1]) &#x3D; 1&#x2F;*3 + 0.5&#x2F;*2 + 0.25&#x2F;*1  **</p>\n<p><strong>例如：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/aac3ecf90bf942f28e2a8f9fdf65eb51.png\"></p>\n<p>在状态d时，γ为多少时往左或右的收益一致？</p>\n<p>解： <img src=\"https://latex.codecogs.com/gif.latex?10%5Ccdot%20%5Cgamma%20%5E%7B3%7D=%201%5Ccdot%20%5Cgamma\" alt=\"10\\cdot \\gamma ^{3}= 1\\cdot \\gamma\">，解得γ＝<img src=\"https://latex.codecogs.com/gif.latex?%5Cfrac%7B1%7D%7B%5Csqrt%7B10%7D%7D\" alt=\"\\frac{1}{\\sqrt{10}}\"> 。</p>\n<h3 id=\"如何停止循环？\"><a href=\"#如何停止循环？\" class=\"headerlink\" title=\"如何停止循环？\"></a>如何停止循环？</h3><p>如果一个游戏可以一直进行，怎么让它停下来并呈现出我们的分数？</p>\n<ol>\n<li><p>可以设置在进行n步之后必须结束游戏（<strong>life&#x2F;生命周期</strong>）</p>\n</li>\n<li><p>可以设置<strong>动态变化的政策</strong>，例如随着可用步数的减少，政策随之变化</p>\n</li>\n<li><p>可以<strong>设置折扣</strong>，到最后奖励值会趋于收敛，当分数变化小于某个临界时可以结束游戏 </p>\n</li>\n<li><p>可以设置一个“<strong>吸收节点</strong>”，当进入这个节点时必须退出游戏，这个节点在前面的阶段不会进入，但到后面终将有可能进入这个状态。</p>\n</li>\n</ol>\n<h3 id=\"价值迭代（Value-Iteration）\"><a href=\"#价值迭代（Value-Iteration）\" class=\"headerlink\" title=\"价值迭代（Value Iteration）\"></a>价值迭代（Value Iteration）</h3><ul>\n<li>起始价值和为0，因为还没有开始迭代</li>\n<li>给定某一向量的价值，开始向后迭代</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/9d2c708660fb4b1180d1a72ea17d9b7a.png\"></p>\n<ul>\n<li>重复迭代直至收敛</li>\n</ul>\n<p> </p>\n<p>值迭代<strong>缺点</strong>：</p>\n<ul>\n<li>速度慢——每次迭代时间复杂度 O(S²A)</li>\n<li>每个状态的“最大值”很少改变</li>\n<li>policy通常早在values之前收敛</li>\n</ul>\n<p> </p>\n<p>举例：汽车运行问题</p>\n<p><img src=\"https://img-blog.csdnimg.cn/5d02b3abe836481d985a651de65d68a2.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/92f95247c4d64fb7b3f4f82d613156e5.png\"></p>\n<h3 id=\"例题-2\"><a href=\"#例题-2\" class=\"headerlink\" title=\"例题\"></a>例题</h3><p><img src=\"https://img-blog.csdnimg.cn/661161e880c6406983563e7a79fa74d9.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/3890918025d44e3c9f1d74b10ee64b8c.png\"></p>\n<hr>\n<h2 id=\"固定策略（Fixed-Policies）\"><a href=\"#固定策略（Fixed-Policies）\" class=\"headerlink\" title=\"固定策略（Fixed Policies）\"></a>固定策略（Fixed Policies）</h2><p>固定每一步的action由函数π(s)得到，那么V值计算如下，其实和价值迭代没太大区别</p>\n<p><img src=\"https://img-blog.csdnimg.cn/10a76e7b05fd42c8bb6e1cde716caedb.png\"></p>\n<hr>\n<h2 id=\"策略提取（Policy-Extraction）\"><a href=\"#策略提取（Policy-Extraction）\" class=\"headerlink\" title=\"策略提取（Policy Extraction）\"></a>策略提取（Policy Extraction）</h2><p>在知道每一步的最优价值V&#x2F;*(s)时，还需要进行一个arg max()操作来求得执行哪个action会得到此最优价值</p>\n<p><img src=\"https://img-blog.csdnimg.cn/098746e1c5df402e8e43b1e693b7a5e2.png\"><img src=\"https://img-blog.csdnimg.cn/68ce2c4eb1bd4d07b01dcc4d60f795c0.png\"></p>\n<p> <img src=\"https://img-blog.csdnimg.cn/ac1c0ea1d958447aafa30dac5400c8f5.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/6e0285d3245d4699a007f8e7722f425f.png\"></p>\n<hr>\n<h2 id=\"策略迭代（Policy-Iteration）\"><a href=\"#策略迭代（Policy-Iteration）\" class=\"headerlink\" title=\"策略迭代（Policy Iteration）\"></a>策略迭代（Policy Iteration）</h2><p>包括两部分：</p>\n<p> 策略评估：对于固定策略π ，通过策略评估得到V值，迭代直至v值收敛</p>\n<p><img src=\"https://img-blog.csdnimg.cn/8e88e205efa7429e84b6f0461de38d65.png\"></p>\n<p>策略提升：对于固定策略的V值，使用策略提取获得更好的策略：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/64cb02fc1d5944a9a9d17063bf4252a3.png\"></p>\n<p>局限：在不知道T和R时无法更新V</p>\n<p>idea：对结果 s’（通过做动作！）和平均值进行采样</p>\n<p><img src=\"https://img-blog.csdnimg.cn/70fa7f85d7114a0bb18d8a98cd5b858b.png\"></p>\n<hr>\n<h2 id=\"策略迭代和价值迭代的比较\"><a href=\"#策略迭代和价值迭代的比较\" class=\"headerlink\" title=\"策略迭代和价值迭代的比较\"></a>策略迭代和价值迭代的比较</h2><p>两者本质上都是计算最优value，都是用于解决MDP的动态程序</p>\n<p>价值迭代：</p>\n<ul>\n<li>每次迭代都更新value和policy</li>\n<li>不跟踪policy，但在选择最大Q值时会隐式的重新计算他</li>\n</ul>\n<p>策略迭代：</p>\n<ul>\n<li>使用固定策略进行了几次更新实用程序的传递（每次传递都很快，因为我们只考虑一个动作，而不是所有动作）</li>\n<li>After the policy is evaluated, a new policy is chosen（慢如值迭代传递）</li>\n<li>新policy会更优</li>\n</ul>\n<hr>\n<h1 id=\"强化学习（Reinforcement-Learning-RL）——online\"><a href=\"#强化学习（Reinforcement-Learning-RL）——online\" class=\"headerlink\" title=\"强化学习（Reinforcement Learning, RL）——online\"></a>强化学习（Reinforcement Learning, RL）——online</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>强化学习与MDP的区别就在于：我们不明确转化函数和奖励函数的具体内容，必须切实地去尝试以后才能得出结论！</p>\n<p><img src=\"https://img-blog.csdnimg.cn/055c03a879fa41859319eef8d86dc81e.png\"></p>\n<p>所以说，强化学习是一种在线学习方式，只能靠自己试错来得出正确的决策。 </p>\n<h2 id=\"基于模型的强化学习（Model-Based-RL，MBRL）\"><a href=\"#基于模型的强化学习（Model-Based-RL，MBRL）\" class=\"headerlink\" title=\"基于模型的强化学习（Model-Based RL，MBRL）\"></a>基于模型的强化学习（Model-Based RL，MBRL）</h2><p>*<br>step1.通过training过程，计算状态转移矩阵T（）和动作reward R（），通过学习得到经验MDP模型</p>\n<p>*<br>step2. 使用价值迭代或策略迭代求解最优values</p>\n<p>过程：</p>\n<ol>\n<li><p>选出所有状态</p>\n</li>\n<li><p>用模型模拟转移函数</p>\n</li>\n<li><p>模拟奖励函数并且得出价值</p>\n</li>\n<li><p>用MDP完成剩余的价值迭代等工作</p>\n</li>\n</ol>\n<p>例题:</p>\n<p><img src=\"https://img-blog.csdnimg.cn/ef6e9b397d8a49f1a55aae152ebe08b6.png\"></p>\n<h2 id=\"无模型强化学习（Model-Free-RL，MFRL）\"><a href=\"#无模型强化学习（Model-Free-RL，MFRL）\" class=\"headerlink\" title=\"无模型强化学习（Model-Free RL，MFRL）\"></a>无模型强化学习（Model-Free RL，MFRL）</h2><h3 id=\"直接评估-Direct-Evaluation\"><a href=\"#直接评估-Direct-Evaluation\" class=\"headerlink\" title=\"直接评估(Direct Evaluation)\"></a>直接评估(Direct Evaluation)</h3><p>计算当前政策下所有动作的价值, 将观察到的样本值作平均</p>\n<ul>\n<li>根据政策做出动作</li>\n<li>每次遇到一种情形, 都把(折扣)奖励加起来</li>\n<li>平均这些样本, 得到直接评估结果</li>\n</ul>\n<p>例题:</p>\n<p><img src=\"https://img-blog.csdnimg.cn/fe5142fde53f467da068a7762f836941.png\"></p>\n<p>计算过程：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">A &#x3D; [-10] &#x2F; 1 &#x3D;10\n\nB &#x3D; [(-1-1+10)+(-1-1+10)]&#x2F;2 &#x3D; +8\n\nC &#x3D; [(-1+10)+(-1+10)+(-1+10)+(-1-10)]&#x2F;4 &#x3D; +4\n\nD &#x3D; [10+10+10]&#x2F;3 &#x3D; +10\n\nE &#x3D; [(-1-1+10)+(-1-1-10)]&#x2F;2 &#x3D; -2\n\n优点：简单易理解；不需要计算T、R；最终你那个计算出正确的平均value\n\n缺点：浪费了状态连接的信息，每个状态必须单独学习，会花费较长时间学习</code></pre>\n\n\n\n<h3 id=\"时间差分学习-Temporal-Difference-Learning\"><a href=\"#时间差分学习-Temporal-Difference-Learning\" class=\"headerlink\" title=\"时间差分学习(Temporal Difference Learning)\"></a>时间差分学习(Temporal Difference Learning)</h3><p>从每段经验中学习 </p>\n<ul>\n<li>每次经过一个转移函数(动作)就更新V(s)</li>\n<li>以至于新的状态将会为更新策略作出更多贡献</li>\n<li>政策固定, 始终作评估</li>\n<li>将当前值提供给任何一个后继者并作平均</li>\n</ul>\n<p>例题:</p>\n<p><img src=\"https://img-blog.csdnimg.cn/771b197f721c48a29ffe6c4e1b805b65.png\"></p>\n<p>计算过程：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/d1d69a1f8c9745e28c1669d6f3f0dc0b.png\"></p>\n<p> </p>\n<h2 id=\"主动强化学习（Active-Reinforcement-Learning）\"><a href=\"#主动强化学习（Active-Reinforcement-Learning）\" class=\"headerlink\" title=\"主动强化学习（Active Reinforcement Learning）\"></a>主动强化学习（Active Reinforcement Learning）</h2><h3 id=\"Q-Learning\"><a href=\"#Q-Learning\" class=\"headerlink\" title=\"Q-Learning\"></a>Q-Learning</h3><p>我们可以计算出下一个状态的价值并取最大值,但我们也可以计算Q-state(Q状态)的值, 在我理解, 它属于一个未决策的中间态（更关注当前状态和动作）, 计算出它的值可以帮助我们决策, 并且更加有用。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/ecc8be781f274aba803378cb190a55dd.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/ae3e94e48e7140a6837d4c5ef2b5035b.png\"><br>如果知道转化函数和奖励函数：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/9b2eda4c58334dfeb51296779777d718.png\">如果不知道：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/3bf45f98f09148ada807516aab9035a8.png\">取一个实例，作为转化函数与奖励函数的值来迭代。</p>\n<p>Q-Learning的属性</p>\n<p>即使没有按最优方式迭代，Q-Learning也始终能够最终迭代为最优结果（非政策学习） </p>\n<p>*<br>  前提条件：</p>\n<ul>\n<li>你必须探索足够的次数</li>\n<li>你必须最终使学习率足够小</li>\n<li>但不要太快减少它</li>\n<li>不管你如何选择行动，要求基本上在限制下内</li>\n</ul>\n<p> </p>\n<h3 id=\"探索与利用\"><a href=\"#探索与利用\" class=\"headerlink\" title=\"探索与利用\"></a>探索与利用</h3><p>我们通常利用各种函数来帮助我们得出价值等数值帮助决策行为，但这样也不一定是最优解，需要偶尔去进行探索，但在什么条件下进行探索呢？</p>\n<ul>\n<li><p>有几种方案可以强迫探索</p>\n</li>\n<li><p>最简单：随机行动（ε-贪婪）</p>\n</li>\n<li><p>每次行动，随机一次（使ε为0到1之间的任意数，每次随机出一个0到1的数与它比较）</p>\n</li>\n<li><p>比ε小，行动随机</p>\n</li>\n<li><p>比ε大，行动按当前策略</p>\n</li>\n<li><p>随机行动的问题？</p>\n</li>\n<li><p>我们最终会探索其他可能性，但必须在学习完成后继续研究</p>\n</li>\n<li><p>解决方案：随着时间的推移降低ε</p>\n</li>\n</ul>\n<hr>\n<h1 id=\"第三部门-一阶逻辑\"><a href=\"#第三部门-一阶逻辑\" class=\"headerlink\" title=\"第三部门  一阶逻辑\"></a>第三部门  一阶逻辑</h1><p><strong>目录</strong></p>\n<p>​\t<a href=\"#%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80\">逻辑基础</a></p>\n<p>​\t\t<a href=\"#%E5%91%BD%E9%A2%98%E7%9A%84%E5%AE%9A%E4%B9%89\">命题的定义</a></p>\n<p>​\t\t<a href=\"#%E5%91%BD%E9%A2%98%E7%9A%84%E7%9C%9F%E5%80%BC\">命题的真值</a></p>\n<p>​\t\t<a href=\"#%E5%8E%9F%E5%AD%90%E5%85%AC%E5%BC%8F\">原子公式</a></p>\n<p>​\t<a href=\"#%E8%BF%9E%E8%AF%8D%E5%92%8C%E9%87%8F%E8%AF%8D\">连词和量词</a></p>\n<p>​\t\t<a href=\"#%E5%90%88%E5%BC%8F%E5%85%AC%E5%BC%8F%E7%9A%84%E7%9C%9F%E5%80%BC%E8%A1%A8\">合式公式的真值表</a></p>\n<p>​\t<a href=\"#%E7%AD%89%E4%BB%B7%E5%85%B3%E7%B3%BB\">等价关系</a></p>\n<p>​\t<a href=\"#%E6%B0%B8%E7%9C%9F%E8%95%B4%E5%90%AB%E5%BC%8F\">永真蕴含式</a></p>\n<p>​\t<a href=\"#%E7%BD%AE%E6%8D%A2%E4%B8%8E%E5%90%88%E4%B8%80%C2%A0\">置换与合一 </a></p>\n<p>​\t<a href=\"#%E6%B6%88%E8%A7%A3%E5%8E%9F%E7%90%86%C2%A0\">消解原理 </a></p>\n<p>​\t<a href=\"#%E9%B2%81%E6%BB%A8%E9%80%8A%E5%BD%92%E7%BB%93%E5%8E%9F%E7%90%86\">鲁滨逊归结原理</a></p>\n<p>​\t<a href=\"#%E6%80%BB%E7%BB%93\">总结</a></p>\n<p>​\t<a href=\"#%E4%BE%8B%E9%A2%98\">例题</a></p>\n<hr>\n<h2 id=\"逻辑基础\"><a href=\"#逻辑基础\" class=\"headerlink\" title=\"逻辑基础\"></a>逻辑基础</h2><h3 id=\"命题的定义\"><a href=\"#命题的定义\" class=\"headerlink\" title=\"命题的定义\"></a>命题的定义</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">断言：一个陈述句称为一个断言(assertion)\n\n命题：具有真假意义的断言</code></pre>\n\n<h3 id=\"命题的真值\"><a href=\"#命题的真值\" class=\"headerlink\" title=\"命题的真值\"></a>命题的真值</h3><ul>\n<li><p><strong>T：命题的意义为真</strong></p>\n</li>\n<li><p><strong>F：命题的意义为假</strong><br><strong>注意：</strong></p>\n</li>\n<li><p><strong>一个命题不能同时为真和假</strong></p>\n</li>\n<li><p><strong>一个命题可以在某些条件下为真，某些条件下为假</strong></p>\n</li>\n</ul>\n<h3 id=\"原子公式\"><a href=\"#原子公式\" class=\"headerlink\" title=\"原子公式\"></a>原子公式</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">原子公式：由谓词符号和若干项组成的谓词演算，是谓词演算基本积木块。\n项包括 : 常量符号、变量符号、函数符号等。\n\n定义原子公式为真值或假值就表示了某种语义(semantics)\n若t1,t2, …, tn是项，p是谓词，则称P(t1,t2,…,tn)为原子谓词公式（原子公式）。\n无变量的原子公式取值确定，包含变量的原子公式取值不定。\n\n举例：\n“机器人（ROBOT）在1号房间（room1）内”\n\n INROOM（ROBOT，room1）为真\n INROOM （ROBOT，room2）为假</code></pre>\n\n\n\n<hr>\n<h2 id=\"连词和量词\"><a href=\"#连词和量词\" class=\"headerlink\" title=\"连词和量词\"></a>连词和量词</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">1. 与、合取（conjunction)：用连词∧把几个公式连接起来而构成的公式。\n合取项是合取式的每个组成部分。\n例：LIKE(I，MUSIC)∧LIKE(I，PAINTING)\n（我喜爱音乐和绘画。）\n2. 或、析取（disjunction）：用连词∨把几个公式连接起来而构成的公式。\n析取项是析取式的每个组成部。\n例：PLAYS(LILI，BASKETBALL)∨PLAYS(LILI，FOOTBALL)\n（李力打篮球或踢足球。）\n3. 蕴涵（Implication）:“→”表示“如果—那么”（IF—THEN）关系，其所构成的公式叫做蕴涵。\n4. 非（Not）表示否定，¬、～均可表示\n5.连词的优先级 ：¬, ∧, ∨ (\\exists, \\forall) , →, ↔</code></pre>\n\n\n\n<h3 id=\"合式公式的真值表\"><a href=\"#合式公式的真值表\" class=\"headerlink\" title=\"合式公式的真值表\"></a>合式公式的真值表</h3><p><img src=\"https://img-blog.csdnimg.cn/f1168271e37f421d86c1dd4c0673d6d4.png\"></p>\n<hr>\n<h2 id=\"等价关系\"><a href=\"#等价关系\" class=\"headerlink\" title=\"等价关系\"></a>等价关系</h2><p>等价(Equivalence): 如果两个合式公式，无论如何解释，其真值表都是相同的，那么我们就称此两合式公式是等价的。<br><img src=\"https://img-blog.csdnimg.cn/cf19071cc4904ba4a238553ec6c897f5.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/64c6754725d7485c83083c83e6900acd.png\"></p>\n<p>注意：（10)说明在一个量化的表达式中的约束变量是一类虚元，它可用任何一个不在表达式中出现过的其他变量符号来代替</p>\n<hr>\n<h2 id=\"永真蕴含式\"><a href=\"#永真蕴含式\" class=\"headerlink\" title=\"永真蕴含式\"></a><strong>永真蕴含式</strong></h2><p><img src=\"https://img-blog.csdnimg.cn/67df255ffbbc4096a866b956e4f3b074.png\"></p>\n<hr>\n<h2 id=\"置换与合一\"><a href=\"#置换与合一\" class=\"headerlink\" title=\"置换与合一\"></a><strong>置换与合一</strong></h2><p><img src=\"https://img-blog.csdnimg.cn/2846863188ed44aab471a08c648369ee.png\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">置换定义：置换是形如&#123;t1 &#x2F;x1 ,t2 &#x2F;x2 ,…,tn &#x2F;xn &#125;的有限集合，其中t1 ,t2 ,…,tn是项；x1 ,x2 ,…,xn 是互不相同的变元；ti &#x2F;xi 表示用项ti 替换变元xi 。\n\n要求：ti与xi 不能相同，xi 不能循环地出现在另一个ti 中。\n\n例如：&#123;a&#x2F;x, c&#x2F;y, f(b)&#x2F;z&#125; 是一个置换， 但 &#123;g(z)&#x2F;x, f(x)&#x2F;z&#125;不是一个置换，原因是x和z之间出现了循环置换现象，若改为&#123;g(a)&#x2F;x, f(x)&#x2F;z&#125;即可**\n\n设θ&#x3D;&#123;t1 &#x2F;x1 ,t2 &#x2F;x2 ,…,tn &#x2F;xn &#125;是一个置换，F是一个谓词公式， 把公式F中出现的所有xi 换成ti(i&#x3D;1,2,…,n)，得到一个新的公式G， 称G为F在置换θ 下的例示，记作**G&#x3D;Fθ</code></pre>\n\n<p><strong>置换的合成（了解）</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/15333f08e279428899d1346534498f67.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/b3546a6cd14a4f75baa5268e714ec503.png\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">合一定义：设有公式集F&#x3D;&#123;F1 , F2 ,…,Fn &#125;，若存在一个置换θ，可使 F1θ&#x3D;F2θ&#x3D;…&#x3D;Fnθ， 则称θ是F的一个合一。称F1 ,F2 ,…,Fn是可合一的。\n\n例：\n\n设有公式集F&#x3D;&#123;P(x, y, f(y)), P(a, g(x), z)&#125;，则 λ&#x3D;&#123;a&#x2F;x, g(a)&#x2F;y, f(g(a))&#x2F;z&#125; 是它的一个合一。\n\n一般情况下,一个公式集的合一不惟一。\n\n最一般合一：设σ是谓词公式集F的一个合一，如果对F的**任意一个合一θ都存在一个置换λ，使得 θ&#x3D; σ· λ，则称σ是一个最一 般(或最简单)合一</code></pre>\n\n\n\n<hr>\n<h2 id=\"消解原理\"><a href=\"#消解原理\" class=\"headerlink\" title=\"消解原理\"></a>消解原理</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">消解:对谓词演算公式进行分解、化简，消去一些符号，以求得导出子句，又称归结\n消解原理：\n\t(1)一种用于子句公式集的重要推理规则\n     (2)子句是由文字的析取组成的公式\n\t(3)一个原子公式、原子公式的否定叫作文字\n注意： 不含任何文字的子句称为空子句。\n\n由子句、空子句所构成的集合称为子句集\n消解过程：消解规则应用于母体子句对，以便产生导出子句\n\n举例：&#123; E1∨E2 ,～E2∨E3 &#125;消解导出E1∨E3</code></pre>\n\n\n\n<p><strong>归结的方法：鲁滨逊归结原理</strong></p>\n<hr>\n<h2 id=\"鲁滨逊归结原理\"><a href=\"#鲁滨逊归结原理\" class=\"headerlink\" title=\"鲁滨逊归结原理\"></a>鲁滨逊归结原理</h2><p>核心：两个子句的<strong>归结式、</strong></p>\n<p>定义1：若P是原子谓词公式，则称P与﹁P为互补文字</p>\n<p>定义2：设C1和C2是子句集中的任意两个子句，如果C1中的文字<strong>L1</strong>与C2中的文字<strong>L2互补</strong>，那么可从C1和C2中分别<strong>消去L1和L2</strong>，并将C1和C2中余下的部分<strong>按析取关系</strong>构成一个新的子句C12，则称这一过程为归结，<strong>称C12为C1和C2的归结式，称C1和C2为C12的亲本(父辈)子句</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2fb5ec93f2914213ac50e57b2373116c.png\"></p>\n<hr>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p><strong>9步法求取子句集</strong></p>\n<ul>\n<li><strong>(1)消去蕴涵符号</strong></li>\n<li><strong>(2)缩小否定符号的辖域(狄·摩根定律)</strong></li>\n<li><strong>(3)变量标准化(哑元唯一)</strong></li>\n<li><strong>(4)消去存在量词</strong></li>\n<li><strong>(5)化为前束形</strong></li>\n<li><strong>(6)化为合取范式(∧)</strong></li>\n<li><strong>(7)消去全称量词</strong></li>\n<li><strong>(8)消去连词符号(∧)</strong></li>\n<li><strong>(9)更换变量名(同一变量名不出现在一个以上子句)</strong></li>\n</ul>\n<hr>\n<h2 id=\"例题-3\"><a href=\"#例题-3\" class=\"headerlink\" title=\"例题\"></a>例题</h2><p><img src=\"https://img-blog.csdnimg.cn/5086e93c0461466da855c210f5081277.png\"><br>解：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/13be1e80c3f346969ac8f6485955a030.png\"><img src=\"https://img-blog.csdnimg.cn/fa588c70c1b046a9baf2fdf74c4fd7c1.png\"><img src=\"https://img-blog.csdnimg.cn/e08faebe22af4d6a97e05ebedbe8b95c.png\"><img src=\"https://img-blog.csdnimg.cn/9ca57af38ecf48b08c148e7eb3d0c188.png\"> <img src=\"https://img-blog.csdnimg.cn/cea35cf537364910bc45e03db313afe8.png\"></p>\n<ul>\n<li>由①和⑦，用zhang置换x     <del>Pass(zhang, computer)∨</del>Win(zℎang,prize)   ⑧</li>\n<li>由③和⑤，用zhang置换u Pass(zhang, v) ⑨</li>\n<li>由⑧和⑨，用computer置换v ~Win(zhang, prize)   ⑩</li>\n<li>由⑥和⑩，用zhang置换w ~Lucky（zhang）  （11）</li>\n<li>由⑤和11可得空子句NIL，所以结论成立，消解树如上图所示。</li>\n</ul>\n<p> </p>\n<p><img src=\"https://img-blog.csdnimg.cn/94bb3a04010b4415b706bcaacb571161.png\"><img src=\"https://img-blog.csdnimg.cn/2c8a4612057d45f1bbd22de4508f8ab6.png\"></p>\n<h1 id=\"第四部分-概率与贝叶斯网络\"><a href=\"#第四部分-概率与贝叶斯网络\" class=\"headerlink\" title=\"第四部分  概率与贝叶斯网络\"></a>第四部分  概率与贝叶斯网络</h1><p><strong>目录</strong></p>\n<p>​\t<a href=\"#%E6%A6%82%E7%8E%87\">概率</a></p>\n<p>​\t\t<a href=\"#%E6%A6%82%E7%8E%87%E5%85%AC%E5%BC%8F\">概率公式</a></p>\n<p>​\t\t\t<a href=\"#%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%85%AC%E5%BC%8F\">贝叶斯公式</a></p>\n<p>​\t\t\t<a href=\"#%E9%93%BE%E5%BC%8F%E6%9D%A1%E4%BB%B6%E6%A6%82%E7%8E%87\">链式条件概率</a></p>\n<p>​\t\t<a href=\"#%E4%BE%8B%E9%A2%98\">例题</a></p>\n<p>​\t\t\t<a href=\"#1.%20%E6%B1%82%E8%81%94%E5%90%88%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83/%E8%BE%B9%E7%BC%98%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83/%E6%9D%A1%E4%BB%B6%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83\">1. 求联合概率分布&#x2F;边缘概率分布&#x2F;条件概率分布</a></p>\n<p>​\t\t\t<a href=\"#2.%20%E7%81%B5%E6%B4%BB%E8%BF%90%E7%94%A8%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%85%AC%E5%BC%8F%C2%A0\">2. 灵活运用贝叶斯公式 </a></p>\n<p>​\t   <a href=\"#%E6%A6%82%E7%8E%87%E6%80%BB%E7%BB%93\">概率总结</a></p>\n<p>​\t<a href=\"#%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BD%91%E7%BB%9C\">贝叶斯网络</a></p>\n<p>​\t\t<a href=\"#%E5%88%A4%E6%96%AD%E7%8B%AC%E7%AB%8B%E6%80%A7\">判断独立性</a></p>\n<p>​\t\t\t<a href=\"#%E4%B8%A4%E4%B8%AA%E4%BA%8B%E4%BB%B6%E7%8B%AC%E7%AB%8B%E7%9A%84%E5%88%A4%E6%96%AD\">两个事件独立的判断</a></p>\n<p>​\t\t\t<a href=\"#%E6%9D%A1%E4%BB%B6%E7%8B%AC%E7%AB%8B%E6%80%A7%E7%9A%84%E5%88%A4%E6%96%AD\">条件独立性的判断</a></p>\n<p>​\t\t\t<a href=\"#%E5%81%87%E8%AE%BE%E6%9D%A1%E4%BB%B6%E7%8B%AC%E7%AB%8B%E7%9A%84%E9%93%BE%E5%BC%8F%E6%B3%95%E5%88%99\">假设条件独立的链式法则</a></p>\n<p>​\t\t<a href=\"#Active%20/%20Inactive%20Paths%20%E5%88%A4%E6%96%AD%E7%8B%AC%E7%AB%8B%E6%80%A7\">⚠Active &#x2F; Inactive Paths 判断独立性</a></p>\n<p>​\t\t<a href=\"#%C2%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E6%9D%A1%E4%BB%B6%E6%A6%82%E7%8E%87\">贝叶斯网络中的条件概率</a></p>\n<p>​\t\t<a href=\"#%E2%80%8B%E7%BC%96%E8%BE%91\">编辑</a></p>\n<p>​\t\t<a href=\"#%C2%A0%E5%A4%9A%E9%87%8D%E8%BF%9E%E6%8E%A5%E5%92%8C%E5%A4%9A%E9%87%8D%E6%B6%88%E9%99%A4%C2%A0Multiple%20Joins%20&%C2%A0Multiple%20Elimination\">多重连接和多重消除 Multiple Joins &amp; Multiple Elimination</a></p>\n<p>​\t\t<a href=\"#%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BD%91%E7%BB%9C%E6%8A%BD%E6%A0%B7(Bayes'%20rel=\">贝叶斯网络抽样(Bayes’ Nets Sampling) </a></p>\n<p>​\t\t\t<a href=\"#%E9%87%87%E6%A0%B7%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E2%80%94%E2%80%94Sampling\">采样是什么？——Sampling</a></p>\n<p>​\t\t\t<a href=\"#%E5%85%88%E9%AA%8C%E6%8A%BD%E6%A0%B7%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%E2%96%AA%20Prior%20Sampling\">先验抽样        ▪ Prior Sampling</a></p>\n<p>​\t\t\t<a href=\"#%E6%8B%92%E7%BB%9D%E6%8A%BD%E6%A0%B7%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%E2%96%AA%20Rejection%20Sampling\">拒绝抽样        ▪ Rejection Sampling</a></p>\n<p>​\t\t\t<a href=\"#%E4%BC%BC%E7%84%B6%E5%8A%A0%E6%9D%83%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%E2%96%AA%20Likelihood%20Weighting\">似然加权        ▪ Likelihood Weighting</a></p>\n<p>​\t\t\t<a href=\"#%E5%90%89%E5%B8%83%E6%96%AF%E6%8A%BD%E6%A0%B7%C2%A0%20%C2%A0%20%C2%A0%E2%96%AA%20Gibbs%20Sampling\">吉布斯抽样     ▪ Gibbs Sampling</a></p>\n<p>​\t\t\t<a href=\"#%E6%80%BB%E7%BB%93\">总结</a></p>\n<p>​\t<a href=\"#%C2%A0%E4%BD%9C%E4%B8%9A%E9%A2%98\">⚠作业题</a></p>\n<hr>\n<h1 id=\"概率\"><a href=\"#概率\" class=\"headerlink\" title=\"概率\"></a>概率</h1><hr>\n<h2 id=\"概率公式\"><a href=\"#概率公式\" class=\"headerlink\" title=\"概率公式\"></a>概率公式</h2><h3 id=\"贝叶斯公式\"><a href=\"#贝叶斯公式\" class=\"headerlink\" title=\"贝叶斯公式\"></a>贝叶斯公式</h3><p><img src=\"https://img-blog.csdnimg.cn/01118b8772564d31b9d044784df5e29d.png\"> <img src=\"https://img-blog.csdnimg.cn/d4dac3bcc7aa491db531a75c99fc6194.png\"></p>\n<h3 id=\"链式条件概率\"><a href=\"#链式条件概率\" class=\"headerlink\" title=\"链式条件概率\"></a>链式条件概率</h3><p><img src=\"https://img-blog.csdnimg.cn/21466b87134947dbb3cd83d7b723996c.png\"></p>\n<hr>\n<h2 id=\"例题-4\"><a href=\"#例题-4\" class=\"headerlink\" title=\"例题\"></a>例题</h2><h3 id=\"1-求联合概率分布-x2F-边缘概率分布-x2F-条件概率分布\"><a href=\"#1-求联合概率分布-x2F-边缘概率分布-x2F-条件概率分布\" class=\"headerlink\" title=\"1. 求联合概率分布&#x2F;边缘概率分布&#x2F;条件概率分布\"></a>1. 求联合概率分布&#x2F;边缘概率分布&#x2F;条件概率分布</h3><p><img src=\"https://img-blog.csdnimg.cn/4b9b6bdc337347f992b5133313b34aae.png\"></p>\n<p>首先明确，P(W |  dry)是一个概率分布，而不是一个概率值。不能写成 P(W |  dry)&#x3D;….</p>\n<p><strong>①求联合概率分布P(D,W);</strong></p>\n<p><strong>②求边缘概率分布</strong>P(D);</p>\n<p><strong>③求条件概率分布</strong>P(W | D).</p>\n<p><img src=\"https://img-blog.csdnimg.cn/f3bd997c54894137b20484dd1f24d4d4.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/e94459c1743c40e68cd1247aa2896118.png\"><br><img src=\"C:\\Users\\tao020704\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230210202657888.png\" alt=\"image-20230210202657888\"></p>\n<h3 id=\"2-灵活运用贝叶斯公式\"><a href=\"#2-灵活运用贝叶斯公式\" class=\"headerlink\" title=\"2. 灵活运用贝叶斯公式\"></a>2. 灵活运用贝叶斯公式</h3><p><img src=\"https://img-blog.csdnimg.cn/e3030344bb3640c89e9f014fffaf38b0.png\"></p>\n<hr>\n<h2 id=\"概率总结\"><a href=\"#概率总结\" class=\"headerlink\" title=\"概率总结\"></a>概率总结</h2><p><img src=\"https://img-blog.csdnimg.cn/0075f4cf95fd4876beedc74ac5a822da.png\"></p>\n<hr>\n<h1 id=\"贝叶斯网络\"><a href=\"#贝叶斯网络\" class=\"headerlink\" title=\"贝叶斯网络\"></a>贝叶斯网络</h1><hr>\n<h2 id=\"判断独立性\"><a href=\"#判断独立性\" class=\"headerlink\" title=\"判断独立性\"></a>判断独立性</h2><h3 id=\"两个事件独立的判断\"><a href=\"#两个事件独立的判断\" class=\"headerlink\" title=\"两个事件独立的判断\"></a>两个事件独立的判断</h3><p><img src=\"https://img-blog.csdnimg.cn/90503170aa4a4774a05730cac8d1c5d6.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/4544381008fd4b998bd5f32b7bb40755.png\"></p>\n<h3 id=\"条件独立性的判断\"><a href=\"#条件独立性的判断\" class=\"headerlink\" title=\"条件独立性的判断\"></a>条件独立性的判断</h3><p><img src=\"https://img-blog.csdnimg.cn/b9a77fcda35742e4ad3fc80b1a18cd4d.png\"></p>\n<h3 id=\"假设条件独立的链式法则\"><a href=\"#假设条件独立的链式法则\" class=\"headerlink\" title=\"假设条件独立的链式法则\"></a>假设条件独立的链式法则</h3><p><img src=\"https://img-blog.csdnimg.cn/9a590b2990c74254ba525f0e2238243b.png\"></p>\n<hr>\n<h2 id=\"⚠Active-x2F-Inactive-Paths-判断独立性\"><a href=\"#⚠Active-x2F-Inactive-Paths-判断独立性\" class=\"headerlink\" title=\"⚠Active &#x2F; Inactive Paths 判断独立性\"></a>⚠Active &#x2F; Inactive Paths 判断独立性</h2><p>要判断X，Y的独立性：</p>\n<ol>\n<li><p>找到X到Y的所有路径paths</p>\n</li>\n<li><p>如果一个path的所有三元组都是active那么此path就是active</p>\n</li>\n</ol>\n<p>​\t<strong>3. 若存在一个path为active，那么X、Y就是非独立的，反之独立</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">简言之：找到一条path的所有三元组都是active那么就非独立；\n\n若只存在一条路径，那么找到一个inactive的三元组就独立，如果全部active才非独立。</code></pre>\n\n<p><strong>⭐可以把X、Y理解为两个水池，如果有一根连通水管（path）里的开关全打开了（active）那么二者连通，不独立（independence）；如果就只有一根水管连接，那么只要有一个开关被关闭（inactive）那么就独立。</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/bcf6f00b3448444289aa594626d1d4f6.png\"></p>\n<p>【上图阴影表示确定条件，即given。】</p>\n<p><strong>⭐只需要记间接因果（中间条件已知）、已知同因（父节点已知）、未知共果是active（子节点未知），其他三个对立的象限自己就出来了。</strong></p>\n<hr>\n<h2 id=\"贝叶斯网络中的条件概率\"><a href=\"#贝叶斯网络中的条件概率\" class=\"headerlink\" title=\"贝叶斯网络中的条件概率\"></a>贝叶斯网络中的条件概率</h2><p><img src=\"https://img-blog.csdnimg.cn/38a8f915d7174aef973083fc87b2f1e9.png\"></p>\n<p>文字描述： 遍历每一项，分别以它们的父节点为条件，连乘即可。</p>\n<p>举例说明比较直观：</p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><img src=\"https://img-blog.csdnimg.cn/b31abb713d924b8ba4861380b4419103.png\"></h2><hr>\n<h2 id=\"多重连接和多重消除-Multiple-Joins-amp-Multiple-Elimination\"><a href=\"#多重连接和多重消除-Multiple-Joins-amp-Multiple-Elimination\" class=\"headerlink\" title=\"多重连接和多重消除 Multiple Joins &amp; Multiple Elimination\"></a>多重连接和多重消除 Multiple Joins &amp; Multiple Elimination</h2><p>对应乘起来就行了，没什么。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2af8c3c3c14e487bbfd1f92554494235.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/a30f8e16360048f9b623c3cdd7c94008.png\"></p>\n<hr>\n<h2 id=\"贝叶斯网络抽样-Bayes’-Nets-Sampling\"><a href=\"#贝叶斯网络抽样-Bayes’-Nets-Sampling\" class=\"headerlink\" title=\"贝叶斯网络抽样(Bayes’ Nets Sampling)\"></a>贝叶斯网络抽样(Bayes’ Nets Sampling)</h2><p>贝叶斯网络的抽样大致分为：</p>\n<ul>\n<li>先验抽样        ▪Prior Sampling</li>\n<li>拒绝抽样        ▪Rejection Sampling</li>\n<li>加权抽样        ▪Likelihood Weighting</li>\n<li>吉布斯抽样     ▪Gibbs Sampling</li>\n</ul>\n<p>其目的是进一步加快贝叶斯网络近似的速度。</p>\n<h3 id=\"采样是什么？——Sampling\"><a href=\"#采样是什么？——Sampling\" class=\"headerlink\" title=\"采样是什么？——Sampling\"></a>采样是什么？——Sampling</h3><p>采样，顾名思义就是从特定的概率分布中抽取相应样本点的过程。它可以将复杂的分布简化为离散的样本点、可以用于随机模拟已进行复杂模型的近似求解或推理等。</p>\n<h3 id=\"先验抽样-▪-Prior-Sampling\"><a href=\"#先验抽样-▪-Prior-Sampling\" class=\"headerlink\" title=\"先验抽样        ▪ Prior Sampling\"></a>先验抽样        ▪ Prior Sampling</h3><p>获取样本的方式为祖先抽样，从父节点开始逐渐扩展，类似于贝叶斯网络中的联合分布，下面以一个经典的例题直观感受一下：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/69066807f05b49019d4e2ffb559ec924.png\"></p>\n<p>如图，它的核心思想是根据有向图的顺序，先对祖先节点进行采样，只有当某个节点的所有父节点都已完成采样，采对该结点进行采样。以上图为场景，先对Cloudy变量进行采样，然后对Sprinkle和Rain变量进行采样，最后对WetGrass变量采样。根据贝叶斯网络的全概率公式</p>\n<p><img src=\"https://img-blog.csdnimg.cn/411ba681d5654895928d2ae8bffb2e13.png\"></p>\n<p>        可以看出祖先采样得到的样本服从贝叶斯网络的联合概率分布。<br>        如果只需要对贝叶斯网络中一部分随机变量的边缘分布进行采样，可以用祖先采样对全部随机变量进行采样，然后直接忽视那些不需要的变量的采样值即可。由图可见，如果需要对边缘分布p(Rain)进行采样，先用祖先采样得到全部变量的一个样本，如（Cloudy&#x3D;T，Sprinkler&#x3D;T，Rain&#x3D;T，WetGrass&#x3D;T），然后忽略掉无关变量，直接把这个样本看成是Coludy&#x3D;T即可。 <br>大致流程：</p>\n<ol>\n<li>设一个事件的样本数为：<img src=\"https://img-blog.csdnimg.cn/1a2de8b6677d4a2caa5cbff69b9cdf90.png\"></li>\n<li>计算生成样本的概率：<img src=\"https://img-blog.csdnimg.cn/1a18d022290e4f198c011f8813652cb2.png\"></li>\n<li>套用公式：<img src=\"https://img-blog.csdnimg.cn/6c3b0c1ae471497dba2e5e43e6d12bd1.png\"></li>\n<li>采样程序是一致的，这样就估计出联合分布的概率。</li>\n</ol>\n<p>例题：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/dc47542a02ec45dfb1089a3b7a84f8a3.png\"></p>\n<p>从贝叶斯网络中得到的样本：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/115f092702a540999b5622e7be29b615.png\"></p>\n<p>需要求P（W）</p>\n<ul>\n<li>计数：+w——4；-w——1</li>\n<li>计算概率：+w——4&#x2F;5&#x3D;0.8；-w——1&#x2F;5&#x3D;0.2</li>\n<li>（样本越多越接近真实概率）</li>\n</ul>\n<p>总结：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/09c6e5b283754618bd9893e4d392ac3f.png\"></p>\n<h3 id=\"拒绝抽样-▪-Rejection-Sampling\"><a href=\"#拒绝抽样-▪-Rejection-Sampling\" class=\"headerlink\" title=\"拒绝抽样        ▪ Rejection Sampling\"></a>拒绝抽样        ▪ Rejection Sampling</h3><p>类似，就不赘述了，它采样的方式就是根据条件取，不符合条件的丢弃：</p>\n<p>假设在上例中我们要求C的概率，此时保留所有样本就没有意义了，我们选择对C计数；</p>\n<p>假设我们想要Ｐ（C|+s），同样的，我们要统计C结果，但忽略（拒绝）没有+s的样本。</p>\n<p>这就是拒绝抽样，它对于条件概率而言也是一致的。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/624d15f8952845baa99cbfa728074208.png\"></p>\n<h3 id=\"似然加权-▪-Likelihood-Weighting\"><a href=\"#似然加权-▪-Likelihood-Weighting\" class=\"headerlink\" title=\"似然加权        ▪ Likelihood Weighting\"></a>似然加权        ▪ Likelihood Weighting</h3><p>举一个例子：在有观测变量（Sprikeler &#x3D; T, WetGrass &#x3D; T）时，可以先对Cloudy进行采样，再对Rain进行采样，对于Sprikeler、WetGrass则直接赋观察值，得到下面的一个样本：<br><img src=\"https://img-blog.csdnimg.cn/20200818094007844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hobm5uXw==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>这样得到的样本的重要性权值为：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">w 正比于 p(Sprinkler &#x3D; T| Cloudy &#x3D; T)*p(WetGrass &#x3D; T| Sprinkler &#x3D; T,Rain &#x3D; T) &#x3D; 0.1&#x2F;**0.99 &#x3D; 0.099\n该式子可以理解为：当其他变量取得样本中的取值时(Cloudy &#x3D; T,Rain &#x3D; T)，预测变量取得其确定值的可能性。 </code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/c72cc53db0944f1b9c198f7bc298a7e5.png\"></p>\n<h3 id=\"吉布斯抽样-▪-Gibbs-Sampling\"><a href=\"#吉布斯抽样-▪-Gibbs-Sampling\" class=\"headerlink\" title=\"吉布斯抽样     ▪ Gibbs Sampling\"></a>吉布斯抽样     ▪ Gibbs Sampling</h3><p><img src=\"https://img-blog.csdnimg.cn/3aaa57145cf6492c932ec200a4642611.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/59cec3c4afbc4972bf9ed774eae032d1.png\"></p>\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>直接采样：按照拓扑顺序依次对每个变量进行采样。变量值被采样的概率分布依赖于父结点已得到的赋值。</p>\n<p>拒绝采样：给定一个易于采样的分布，为一个难于采样的分布生成采样样本。</p>\n<p>似然加权（likelihood weighting）只生成与证据e一致的事件，从而避免拒绝采样算法的低效率。</p>\n<p>Gibbs采样算法：贝叶斯网络的Gibbs采样算法从任意的状态出发，通过(给定马尔可夫覆盖)对一个非证据变量Xi随机采样而生成下一个状态。对Xi的采样条件依赖于Xi的马尔可夫覆盖中的变量的当前值。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/1fbe93f0e74e4ef3bd2c1c7946cda6f4.png\"></p>\n<hr>\n<h2 id=\"⚠作业题\"><a href=\"#⚠作业题\" class=\"headerlink\" title=\"⚠作业题\"></a>⚠作业题</h2><p><img src=\"https://img-blog.csdnimg.cn/5aae110ee0c442c5a409a5517d90092b.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/6f5165e3f46f462c93da9899ed847d84.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/ab2801b7b194467593f71bc6b76c3fe8.png\"></p>\n<h1 id=\"第五部分-机器学习\"><a href=\"#第五部分-机器学习\" class=\"headerlink\" title=\"第五部分  机器学习\"></a>第五部分  机器学习</h1><p><strong>目录</strong></p>\n<p>​\t<a href=\"#%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E5%92%8C%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0\">监督学习  vs 无监督学习</a></p>\n<p>​\t<a href=\"#%C2%A0%E5%9B%9E%E5%BD%92%20vs%20%E5%88%86%E7%B1%BB%C2%A0Regression%20vs%20Classification\">回归 vs 分类 Regression vs Classification</a></p>\n<p>​\t<a href=\"#%E8%AE%AD%E7%BB%83%E9%9B%86%20vs%20%E6%B5%8B%E8%AF%95%E9%9B%86%20vs%E9%AA%8C%E8%AF%81%E9%9B%86\">训练集 vs 测试集 vs 验证集</a></p>\n<p>​\t<a href=\"#%E6%B3%9B%E5%8C%96%E5%92%8C%E8%BF%87%E6%8B%9F%E5%90%88%C2%A0Generalization%20&%20Overfitting\">泛化和过拟合 Generalization &amp; Overfitting</a></p>\n<p>​\t<a href=\"#%E7%BA%BF%E6%80%A7%E5%88%86%E7%B1%BB%E5%99%A8%C2%A0Linear%20Classifiers\">线性分类器 Linear Classifiers</a></p>\n<p>​\t<a href=\"#%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0%20-%20%E6%A6%82%E7%8E%87%E5%86%B3%E7%AD%96\">激活函数 - 概率决策</a></p>\n<p>​\t<a href=\"#%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%C2%A0\">⚠线性回归 </a></p>\n<p>​\t<a href=\"#%C2%A0%E5%86%B3%E7%AD%96%E6%A0%91%C2%A0Decision%20Trees\">决策树 Decision Trees</a></p>\n<p>​\t\t<a href=\"#%E5%86%B3%E7%AD%96%E6%A0%91%E6%9E%84%E5%BB%BA%E9%80%92%E5%BD%92%E9%80%80%E5%87%BA%E6%9D%A1%E4%BB%B6C\">决策树构建递归退出条件C</a></p>\n<p>​\t\t<a href=\"#%E4%BF%A1%E6%81%AF%E7%86%B5%C2%A0Entropy\">信息熵 Entropy</a></p>\n<p>​\t\t<a href=\"#%E4%BF%A1%E6%81%AF%E5%A2%9E%E7%9B%8A%C2%A0Information%20Gain\">信息增益 Information Gain</a></p>\n<p>​\t\t<a href=\"#ID3%E7%AE%97%E6%B3%95%E5%AE%9E%E4%BE%8B\">⚠ID3算法实例</a></p>\n<hr>\n<h2 id=\"监督学习-vs-无监督学习\"><a href=\"#监督学习-vs-无监督学习\" class=\"headerlink\" title=\"监督学习  vs 无监督学习\"></a>监督学习  vs 无监督学习</h2><p>监督学习：输入已知类别的数据样本         分类、回归</p>\n<p>无监督学习：输入未知类别的数据样本      聚类</p>\n<hr>\n<h2 id=\"回归-vs-分类-Regression-vs-Classification\"><a href=\"#回归-vs-分类-Regression-vs-Classification\" class=\"headerlink\" title=\"回归 vs 分类 Regression vs Classification\"></a>回归 vs 分类 Regression vs Classification</h2><p>分类：对输入数据进行离散值标签的预测</p>\n<p>回归：预测连续的、具体的数值</p>\n<p><strong>Output： 连续 vs 离散</strong></p>\n<p>分类需要激活函数</p>\n<p><img src=\"https://img-blog.csdnimg.cn/b1101104e7fb4a1a818b3f5d8c77bccf.png\"></p>\n<hr>\n<h2 id=\"训练集-vs-测试集-vs-验证集\"><a href=\"#训练集-vs-测试集-vs-验证集\" class=\"headerlink\" title=\"训练集 vs 测试集 vs 验证集\"></a>训练集 vs 测试集 vs 验证集</h2><p>训练集用于学习参数（例如模型概率）</p>\n<p>测试集用于计算模型的准确率</p>\n<p>验证集用于调节超参数</p>\n<hr>\n<h2 id=\"泛化和过拟合-Generalization-amp-Overfitting\"><a href=\"#泛化和过拟合-Generalization-amp-Overfitting\" class=\"headerlink\" title=\"泛化和过拟合 Generalization &amp; Overfitting\"></a>泛化和过拟合 Generalization &amp; Overfitting</h2><p>在有监督学习中，我们会在训练数据集上建立一个模型，之后会把这个模型用于新的，之前从未见过的数据中，这个过程称为模型的<strong>泛化</strong></p>\n<p>模型在训练集上表现好，在测试集验证集表现差就说明出现了<strong>过拟合问题，</strong>出现这种情况的主要原因是训练数据中存在噪音或者训练数据太少</p>\n<p>解决办法：选取合适的停止训练标准；使用验证数据集；获取额外数据进行交叉验证；正则化<br>Relative frequency parameters will overfit the training data</p>\n<p>相对频率参数会过拟合训练数据</p>\n<hr>\n<h2 id=\"线性分类器-Linear-Classifiers\"><a href=\"#线性分类器-Linear-Classifiers\" class=\"headerlink\" title=\"线性分类器 Linear Classifiers\"></a>线性分类器 Linear Classifiers</h2><p>输入特征<strong>向量</strong> f(x) </p>\n<p>权重**向量 ** w</p>\n<p><strong>在二分类中：</strong></p>\n<p>真实标签为 y&#x2F;*∈{-1，1}，</p>\n<p>预测标签为 y ，w和f(x)在同一平面则为正样本，y&#x3D;1，反之y&#x3D;-1</p>\n<p><img src=\"https://img-blog.csdnimg.cn/e8ae99d5282641f19142e11577e311ea.png\"></p>\n<p>如果分类正确，不更新w，分类错误则更新 w</p>\n<p><em><em>w &#x3D; w + y&#x2F;</em> · f(x)  ** 其中y&#x2F;</em> &#x3D; 1或-1</p>\n<p><img src=\"https://img-blog.csdnimg.cn/0bec96ae2f9443688300a7636f2f6cee.png\"></p>\n<p><strong>在多分类中：</strong></p>\n<p>输入特征<strong>向量</strong> f(x) </p>\n<p>每个类别的权重 **向量 **<img src=\"https://img-blog.csdnimg.cn/826e883d86e14159ae5819ae40c18b5a.png\"></p>\n<p> 预测标签为 y ，取<img src=\"https://img-blog.csdnimg.cn/4fd9d89b6c9946219da81029a1ba9a4e.png\">最大的一个类别标签</p>\n<p><img src=\"https://img-blog.csdnimg.cn/423acbf0b378478bbe241c9ec5221943.png\"></p>\n<p>如果分类正确，不更新w；分类错误则更新 w，此时需要分别对正确和错误的两个w进行更新</p>\n<p><strong>关键点</strong>：<strong>减小</strong>错分类别的向量点积，<strong>增大</strong>真实类别的向量点积</p>\n<p><img src=\"https://img-blog.csdnimg.cn/52f15258c5ff4554a061818fa77533ef.png\">          <img src=\"https://img-blog.csdnimg.cn/088b9417f10940de8b02c214c9192b5b.png\"></p>\n<hr>\n<h2 id=\"激活函数-概率决策\"><a href=\"#激活函数-概率决策\" class=\"headerlink\" title=\"激活函数 - 概率决策\"></a>激活函数 - 概率决策</h2><p><img src=\"https://img-blog.csdnimg.cn/ce625e6c13bb4f7189697a8e8fba4c39.png\"></p>\n<p> <img src=\"https://img-blog.csdnimg.cn/99ffd12e3cc24839b6656833a6ff890b.png\"></p>\n<hr>\n<h2 id=\"⚠线性回归\"><a href=\"#⚠线性回归\" class=\"headerlink\" title=\"⚠线性回归\"></a><strong>⚠</strong>线性回归</h2><p><img src=\"https://img-blog.csdnimg.cn/ef9f8d68c95d413dbf0aecf685f39b7a.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/390f7fb55b3043dfb5dffb6a7d1140d2.png\"></p>\n<p> <strong>L2 loss：所有样本的平方误差和</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/7c8b3f5bfab44958a1362cded51da268.png\"></p>\n<p><strong>例：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/cf4a5a9a7afd49eaa24f983f009fc07c.png\"></p>\n<p>​                       <img src=\"https://img-blog.csdnimg.cn/a8196578cf774ec397826dfa5185fc32.png\"></p>\n<p>​                                <img src=\"https://img-blog.csdnimg.cn/deb97beb695141e889ee846cd33f1f5b.png\"></p>\n<hr>\n<h2 id=\"决策树-Decision-Trees\"><a href=\"#决策树-Decision-Trees\" class=\"headerlink\" title=\"决策树 Decision Trees\"></a>决策树 Decision Trees</h2><h3 id=\"决策树构建递归退出条件C\"><a href=\"#决策树构建递归退出条件C\" class=\"headerlink\" title=\"决策树构建递归退出条件C\"></a><strong>决策树构建递归退出条件C</strong></h3><ul>\n<li>当前样本集D包含的样本属于同一类别C</li>\n<li>当前属性集A为空或样本集D中所有样本在所有属性上取值相同（但类别可能不相同）</li>\n<li>当前结点包含的样本集<img src=\"https://img-blog.csdnimg.cn/fa0e339a3be343618d3719e611b430ea.png\">为空</li>\n</ul>\n<h3 id=\"信息熵-Entropy\"><a href=\"#信息熵-Entropy\" class=\"headerlink\" title=\"信息熵 Entropy\"></a>信息熵 Entropy</h3><p>信息熵是度量样本集合纯度的指标</p>\n<p>假定当前样本集合D中第k类样本所占比例为pk（k&#x3D;1，2，…，|y|）则D的信息熵的定义为：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/0ab855d41e9742b8ae0999da951c7a22.png\"></p>\n<p> Ent(D)的取值范围为 [0,log2|y| ]，值越小，纯度越高</p>\n<p>计算信息熵时约定：若p&#x3D;0，则<img src=\"https://img-blog.csdnimg.cn/08a3038f5c4f4f48bd017f91d833552c.png\">&#x3D;0</p>\n<h3 id=\"信息增益-Information-Gain\"><a href=\"#信息增益-Information-Gain\" class=\"headerlink\" title=\"信息增益 Information Gain\"></a>信息增益 Information Gain</h3><p>样本集D的某个离散属性a有V个可能的取值<img src=\"https://img-blog.csdnimg.cn/88dbd612a69c49caa2ca0a574f7662a3.png\">，用a来对D进行划分则会产生V个分支结点，其中第v个分支结点包含了D中所有在在属性a上取值为<img src=\"https://img-blog.csdnimg.cn/1b4db973a51243e2a5ec02b3f2b49141.png\">的样本，记为<img src=\"https://img-blog.csdnimg.cn/d68f0f67527948ee8157c02b2db3330e.png\">。定义用属性a对样本集D进行划分所获得的信息增益为：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/96a4a1afb6494965a79dd0a19491f019.png\"></p>\n<p>一般而言，信息增益越大，意味着使用属性a来进行划分获得的纯度提升越大</p>\n<p><strong>在ID3算法中选择<strong><strong>信息增益大</strong></strong>的属性来划分样本集</strong></p>\n<h3 id=\"⚠ID3算法实例\"><a href=\"#⚠ID3算法实例\" class=\"headerlink\" title=\"⚠ID3算法实例\"></a>⚠ID3算法实例</h3><p><img src=\"https://img-blog.csdnimg.cn/646089f139e14f4d9cca53bea8faf381.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2d6df0c45c114e7984f16a71f112af36.png\"></p>\n<p> </p>\n<p><img src=\"https://img-blog.csdnimg.cn/d6049dc40ddf43498a498eeb690047b0.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/cb162af2881a41998708d1db0690c476.png\"></p>\n<p> </p>\n<p><img src=\"https://img-blog.csdnimg.cn/c00d9899e3524b7e87549c87b18d4547.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/a25cfd917d55499cbc43dfb6c53c6c19.png\"></p>\n","text":"第一部分 搜索问题目录 ​ 前言 ​ 人工智能历史 ​ 搜索问题 ​ 什么是搜索问题？ ​ 不知情搜索算法（Uninformed Search） ​ 一些重要概念 ​ 深度优先搜索（DFS） ​ 广度优先搜索（BFS） ​ 代价敏感搜索（CCS） ​ 代价一致搜索（UCS） ​ ...","link":"","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"16 mins."},"categories":[{"name":"复习笔记","slug":"复习笔记","count":5,"path":"api/categories/复习笔记.json"}],"tags":[{"name":"AI","slug":"AI","count":1,"path":"api/tags/AI.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86-%E6%90%9C%E7%B4%A2%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">第一部分 搜索问题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%86%E5%8F%B2\"><span class=\"toc-text\">人工智能历史</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%90%9C%E7%B4%A2%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">搜索问题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E6%90%9C%E7%B4%A2%E9%97%AE%E9%A2%98%EF%BC%9F\"><span class=\"toc-text\">什么是搜索问题？</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E7%9F%A5%E6%83%85%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95%EF%BC%88Uninformed-Search%EF%BC%89\"><span class=\"toc-text\">不知情搜索算法（Uninformed Search）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E4%BA%9B%E9%87%8D%E8%A6%81%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">一些重要概念</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%EF%BC%88DFS%EF%BC%89\"><span class=\"toc-text\">深度优先搜索（DFS）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%EF%BC%88BFS%EF%BC%89\"><span class=\"toc-text\">广度优先搜索（BFS）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E4%BB%B7%E6%95%8F%E6%84%9F%E6%90%9C%E7%B4%A2%EF%BC%88CCS%EF%BC%89\"><span class=\"toc-text\">代价敏感搜索（CCS）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E4%BB%B7%E4%B8%80%E8%87%B4%E6%90%9C%E7%B4%A2%EF%BC%88UCS%EF%BC%89\"><span class=\"toc-text\">代价一致搜索（UCS）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E6%83%85%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95%EF%BC%88Informed-Search%EF%BC%89\"><span class=\"toc-text\">知情搜索算法（Informed Search）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8F%91%E5%BC%8F%E6%90%9C%E7%B4%A2%EF%BC%88Heuristics-Search%EF%BC%89\"><span class=\"toc-text\">启发式搜索（Heuristics Search）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B4%AA%E5%BF%83%E6%90%9C%E7%B4%A2%EF%BC%88Greedy-Search%EF%BC%89\"><span class=\"toc-text\">贪心搜索（Greedy Search）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#A-%E6%90%9C%E7%B4%A2\"><span class=\"toc-text\">A*搜索</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%BE%E6%90%9C%E7%B4%A2%EF%BC%88Graph-Search%EF%BC%89\"><span class=\"toc-text\">图搜索（Graph Search）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98\"><span class=\"toc-text\">例题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%AA%8C%EF%BC%9AA-%E7%AE%97%E6%B3%95%E8%A7%A3%E5%86%B3%E5%85%AB%E6%95%B0%E7%A0%81%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">实验：A*算法解决八数码问题</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E6%8A%97%E6%90%9C%E7%B4%A2\"><span class=\"toc-text\">对抗搜索</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9B%B6%E5%92%8C%E6%B8%B8%E6%88%8F%EF%BC%88Zero-sum-Games%EF%BC%89\"><span class=\"toc-text\">零和游戏（Zero-sum Games）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9E%81%E5%B0%8F%E5%8C%96%E6%9E%81%E5%A4%A7%E7%AE%97%E6%B3%95%EF%BC%88Minimax-Algorithm%EF%BC%89\"><span class=\"toc-text\">极小化极大算法（Minimax Algorithm）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Alpha-Beta%E5%89%AA%E6%9E%9D%E7%AE%97%E6%B3%95%EF%BC%88Alpha-Beta-Pruning%EF%BC%89\"><span class=\"toc-text\">Alpha-Beta剪枝算法（Alpha-Beta Pruning）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98-1\"><span class=\"toc-text\">例题</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86-MDP%E5%92%8C%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0\"><span class=\"toc-text\">第二部分 MDP和强化学习</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9C%9F%E6%9C%9B%E6%9C%80%E5%A4%A7%E6%90%9C%E7%B4%A2%EF%BC%88Expectimax-Search%EF%BC%89\"><span class=\"toc-text\">期望最大搜索（Expectimax Search）</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E2%AD%90%E9%A9%AC%E5%B0%94%E7%A7%91%E5%A4%AB%E5%86%B3%E7%AD%96%EF%BC%88MDP%EF%BC%89%E2%80%94%E2%80%94offline%EF%BC%88%E8%B6%85%E9%87%8D%E7%82%B9%EF%BC%89\"><span class=\"toc-text\">⭐马尔科夫决策（MDP）——offline（超重点）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%88%E6%9D%A5%E7%9C%8B%E4%B8%80%E4%B8%AA%E4%BE%8B%E5%AD%90\"><span class=\"toc-text\">先来看一个例子</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">基本概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%94%BF%E7%AD%96%EF%BC%88Policy%EF%BC%89\"><span class=\"toc-text\">政策（Policy）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8A%98%E6%89%A3%EF%BC%88Discounting%EF%BC%89\"><span class=\"toc-text\">折扣（Discounting）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E5%81%9C%E6%AD%A2%E5%BE%AA%E7%8E%AF%EF%BC%9F\"><span class=\"toc-text\">如何停止循环？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%B7%E5%80%BC%E8%BF%AD%E4%BB%A3%EF%BC%88Value-Iteration%EF%BC%89\"><span class=\"toc-text\">价值迭代（Value Iteration）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98-2\"><span class=\"toc-text\">例题</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%BA%E5%AE%9A%E7%AD%96%E7%95%A5%EF%BC%88Fixed-Policies%EF%BC%89\"><span class=\"toc-text\">固定策略（Fixed Policies）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%96%E7%95%A5%E6%8F%90%E5%8F%96%EF%BC%88Policy-Extraction%EF%BC%89\"><span class=\"toc-text\">策略提取（Policy Extraction）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%96%E7%95%A5%E8%BF%AD%E4%BB%A3%EF%BC%88Policy-Iteration%EF%BC%89\"><span class=\"toc-text\">策略迭代（Policy Iteration）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%96%E7%95%A5%E8%BF%AD%E4%BB%A3%E5%92%8C%E4%BB%B7%E5%80%BC%E8%BF%AD%E4%BB%A3%E7%9A%84%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">策略迭代和价值迭代的比较</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%88Reinforcement-Learning-RL%EF%BC%89%E2%80%94%E2%80%94online\"><span class=\"toc-text\">强化学习（Reinforcement Learning, RL）——online</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8E%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%88Model-Based-RL%EF%BC%8CMBRL%EF%BC%89\"><span class=\"toc-text\">基于模型的强化学习（Model-Based RL，MBRL）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%97%A0%E6%A8%A1%E5%9E%8B%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%88Model-Free-RL%EF%BC%8CMFRL%EF%BC%89\"><span class=\"toc-text\">无模型强化学习（Model-Free RL，MFRL）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E6%8E%A5%E8%AF%84%E4%BC%B0-Direct-Evaluation\"><span class=\"toc-text\">直接评估(Direct Evaluation)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%97%B6%E9%97%B4%E5%B7%AE%E5%88%86%E5%AD%A6%E4%B9%A0-Temporal-Difference-Learning\"><span class=\"toc-text\">时间差分学习(Temporal Difference Learning)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E5%8A%A8%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%EF%BC%88Active-Reinforcement-Learning%EF%BC%89\"><span class=\"toc-text\">主动强化学习（Active Reinforcement Learning）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Q-Learning\"><span class=\"toc-text\">Q-Learning</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A2%E7%B4%A2%E4%B8%8E%E5%88%A9%E7%94%A8\"><span class=\"toc-text\">探索与利用</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E9%83%A8%E9%97%A8-%E4%B8%80%E9%98%B6%E9%80%BB%E8%BE%91\"><span class=\"toc-text\">第三部门  一阶逻辑</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">逻辑基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%91%BD%E9%A2%98%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">命题的定义</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%91%BD%E9%A2%98%E7%9A%84%E7%9C%9F%E5%80%BC\"><span class=\"toc-text\">命题的真值</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E5%AD%90%E5%85%AC%E5%BC%8F\"><span class=\"toc-text\">原子公式</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9E%E8%AF%8D%E5%92%8C%E9%87%8F%E8%AF%8D\"><span class=\"toc-text\">连词和量词</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%88%E5%BC%8F%E5%85%AC%E5%BC%8F%E7%9A%84%E7%9C%9F%E5%80%BC%E8%A1%A8\"><span class=\"toc-text\">合式公式的真值表</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%89%E4%BB%B7%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">等价关系</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B0%B8%E7%9C%9F%E8%95%B4%E5%90%AB%E5%BC%8F\"><span class=\"toc-text\">永真蕴含式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BD%AE%E6%8D%A2%E4%B8%8E%E5%90%88%E4%B8%80\"><span class=\"toc-text\">置换与合一</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B6%88%E8%A7%A3%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">消解原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%B2%81%E6%BB%A8%E9%80%8A%E5%BD%92%E7%BB%93%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">鲁滨逊归结原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98-3\"><span class=\"toc-text\">例题</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E5%9B%9B%E9%83%A8%E5%88%86-%E6%A6%82%E7%8E%87%E4%B8%8E%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BD%91%E7%BB%9C\"><span class=\"toc-text\">第四部分  概率与贝叶斯网络</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A6%82%E7%8E%87\"><span class=\"toc-text\">概率</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A6%82%E7%8E%87%E5%85%AC%E5%BC%8F\"><span class=\"toc-text\">概率公式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%85%AC%E5%BC%8F\"><span class=\"toc-text\">贝叶斯公式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%93%BE%E5%BC%8F%E6%9D%A1%E4%BB%B6%E6%A6%82%E7%8E%87\"><span class=\"toc-text\">链式条件概率</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98-4\"><span class=\"toc-text\">例题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%B1%82%E8%81%94%E5%90%88%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83-x2F-%E8%BE%B9%E7%BC%98%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83-x2F-%E6%9D%A1%E4%BB%B6%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83\"><span class=\"toc-text\">1. 求联合概率分布&#x2F;边缘概率分布&#x2F;条件概率分布</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E7%81%B5%E6%B4%BB%E8%BF%90%E7%94%A8%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%85%AC%E5%BC%8F\"><span class=\"toc-text\">2. 灵活运用贝叶斯公式</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A6%82%E7%8E%87%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">概率总结</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BD%91%E7%BB%9C\"><span class=\"toc-text\">贝叶斯网络</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%A4%E6%96%AD%E7%8B%AC%E7%AB%8B%E6%80%A7\"><span class=\"toc-text\">判断独立性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%A4%E4%B8%AA%E4%BA%8B%E4%BB%B6%E7%8B%AC%E7%AB%8B%E7%9A%84%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">两个事件独立的判断</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9D%A1%E4%BB%B6%E7%8B%AC%E7%AB%8B%E6%80%A7%E7%9A%84%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">条件独立性的判断</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%81%87%E8%AE%BE%E6%9D%A1%E4%BB%B6%E7%8B%AC%E7%AB%8B%E7%9A%84%E9%93%BE%E5%BC%8F%E6%B3%95%E5%88%99\"><span class=\"toc-text\">假设条件独立的链式法则</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%9A%A0Active-x2F-Inactive-Paths-%E5%88%A4%E6%96%AD%E7%8B%AC%E7%AB%8B%E6%80%A7\"><span class=\"toc-text\">⚠Active &#x2F; Inactive Paths 判断独立性</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E6%9D%A1%E4%BB%B6%E6%A6%82%E7%8E%87\"><span class=\"toc-text\">贝叶斯网络中的条件概率</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E9%87%8D%E8%BF%9E%E6%8E%A5%E5%92%8C%E5%A4%9A%E9%87%8D%E6%B6%88%E9%99%A4-Multiple-Joins-amp-Multiple-Elimination\"><span class=\"toc-text\">多重连接和多重消除 Multiple Joins &amp; Multiple Elimination</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BD%91%E7%BB%9C%E6%8A%BD%E6%A0%B7-Bayes%E2%80%99-Nets-Sampling\"><span class=\"toc-text\">贝叶斯网络抽样(Bayes’ Nets Sampling)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%87%87%E6%A0%B7%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E2%80%94%E2%80%94Sampling\"><span class=\"toc-text\">采样是什么？——Sampling</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%88%E9%AA%8C%E6%8A%BD%E6%A0%B7-%E2%96%AA-Prior-Sampling\"><span class=\"toc-text\">先验抽样        ▪ Prior Sampling</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8B%92%E7%BB%9D%E6%8A%BD%E6%A0%B7-%E2%96%AA-Rejection-Sampling\"><span class=\"toc-text\">拒绝抽样        ▪ Rejection Sampling</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BC%BC%E7%84%B6%E5%8A%A0%E6%9D%83-%E2%96%AA-Likelihood-Weighting\"><span class=\"toc-text\">似然加权        ▪ Likelihood Weighting</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%89%E5%B8%83%E6%96%AF%E6%8A%BD%E6%A0%B7-%E2%96%AA-Gibbs-Sampling\"><span class=\"toc-text\">吉布斯抽样     ▪ Gibbs Sampling</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93-1\"><span class=\"toc-text\">总结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%9A%A0%E4%BD%9C%E4%B8%9A%E9%A2%98\"><span class=\"toc-text\">⚠作业题</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%94%E9%83%A8%E5%88%86-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0\"><span class=\"toc-text\">第五部分  机器学习</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0-vs-%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0\"><span class=\"toc-text\">监督学习  vs 无监督学习</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9E%E5%BD%92-vs-%E5%88%86%E7%B1%BB-Regression-vs-Classification\"><span class=\"toc-text\">回归 vs 分类 Regression vs Classification</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%AD%E7%BB%83%E9%9B%86-vs-%E6%B5%8B%E8%AF%95%E9%9B%86-vs-%E9%AA%8C%E8%AF%81%E9%9B%86\"><span class=\"toc-text\">训练集 vs 测试集 vs 验证集</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%9B%E5%8C%96%E5%92%8C%E8%BF%87%E6%8B%9F%E5%90%88-Generalization-amp-Overfitting\"><span class=\"toc-text\">泛化和过拟合 Generalization &amp; Overfitting</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E6%80%A7%E5%88%86%E7%B1%BB%E5%99%A8-Linear-Classifiers\"><span class=\"toc-text\">线性分类器 Linear Classifiers</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0-%E6%A6%82%E7%8E%87%E5%86%B3%E7%AD%96\"><span class=\"toc-text\">激活函数 - 概率决策</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%9A%A0%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92\"><span class=\"toc-text\">⚠线性回归</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%86%B3%E7%AD%96%E6%A0%91-Decision-Trees\"><span class=\"toc-text\">决策树 Decision Trees</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%B3%E7%AD%96%E6%A0%91%E6%9E%84%E5%BB%BA%E9%80%92%E5%BD%92%E9%80%80%E5%87%BA%E6%9D%A1%E4%BB%B6C\"><span class=\"toc-text\">决策树构建递归退出条件C</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%A1%E6%81%AF%E7%86%B5-Entropy\"><span class=\"toc-text\">信息熵 Entropy</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%A1%E6%81%AF%E5%A2%9E%E7%9B%8A-Information-Gain\"><span class=\"toc-text\">信息增益 Information Gain</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E2%9A%A0ID3%E7%AE%97%E6%B3%95%E5%AE%9E%E4%BE%8B\"><span class=\"toc-text\">⚠ID3算法实例</span></a></li></ol></li></ol></li></ol>","author":{"name":"涛","slug":"blog-author","avatar":"https://up.enterdesk.com/edpic_source/44/ff/3d/44ff3d6bd2819d524facfcc33205d4cd.jpg","link":"/","description":"一位Computer Science的学生","socials":{"github":"https://github.com/Blizzard-cyber","twitter":"","stackoverflow":"https://stackoverflow.com/users/17709435/blizzard","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wan-meng-ci-yi-xi","csdn":"https://blog.csdn.net/qq_55751352?spm=1010.2135.3001.5343","juejin":"https://juejin.cn/user/1289054417332301","customs":{}}},"mapped":true,"prev_post":{"title":"计算机操作系统复习笔记（三）","uid":"7da07456a3be614155ce9d5c6f12f8ad","slug":"OSreview3","date":"2023-03-16T14:27:01.000Z","updated":"2023-03-16T14:47:42.687Z","comments":true,"path":"api/articles/OSreview3.json","keywords":null,"cover":"https://picx.zhimg.com/v2-ab4d2e1f84d9a3d9cd65d7894164bcea_1440w.jpg?source=172ae18b","text":"目录 前言 文件管理：基础 ​ 基本概念 ​ 文件 ​ 文件系统 ​ 文件系统的实现模型 ​ 文件的组成 ​ 文件名 ​ 文件分类 ​ 文件结构 ​ 逻辑结构 ​ 物理结构 ​ 练习题 文件管理：目录 ​ 文件控制块FCB ​ FCB：File Control Block ​ F...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"复习笔记","slug":"复习笔记","count":5,"path":"api/categories/复习笔记.json"}],"tags":[{"name":"OS","slug":"OS","count":3,"path":"api/tags/OS.json"}],"author":{"name":"涛","slug":"blog-author","avatar":"https://up.enterdesk.com/edpic_source/44/ff/3d/44ff3d6bd2819d524facfcc33205d4cd.jpg","link":"/","description":"一位Computer Science的学生","socials":{"github":"https://github.com/Blizzard-cyber","twitter":"","stackoverflow":"https://stackoverflow.com/users/17709435/blizzard","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wan-meng-ci-yi-xi","csdn":"https://blog.csdn.net/qq_55751352?spm=1010.2135.3001.5343","juejin":"https://juejin.cn/user/1289054417332301","customs":{}}},"feature":true},"next_post":{"title":"毛中特复习提纲","uid":"13496e257353ba6c01963033a6fae016","slug":"maoreview","date":"2023-03-16T08:59:30.000Z","updated":"2023-03-16T09:01:51.629Z","comments":true,"path":"api/articles/maoreview.json","keywords":null,"cover":"https://t.m.youth.cn/magicimg/agzy.youth.cn/zt/2019qmjyl/kglx1/201903/W020190330297608130021.jpg","text":"毛泽东思想毛泽东思想发展： 历史条件： 帝国主义、无产阶级革命时代，社会主义革命；冷战，和平演变。 发展过程： 第一次国内革命战争时期，《中国社会各阶级的分析》《湖南农民运动考察报告》，提出新民主主义革命思想 土地革命战争时期，开辟农村包围城市、武装夺取政权道路，《中国的红色政权...","link":"","photos":[],"count_time":{"symbolsCount":"9.5k","symbolsTime":"9 mins."},"categories":[{"name":"复习笔记","slug":"复习笔记","count":5,"path":"api/categories/复习笔记.json"}],"tags":[{"name":"Maxist","slug":"Maxist","count":2,"path":"api/tags/Maxist.json"}],"author":{"name":"涛","slug":"blog-author","avatar":"https://up.enterdesk.com/edpic_source/44/ff/3d/44ff3d6bd2819d524facfcc33205d4cd.jpg","link":"/","description":"一位Computer Science的学生","socials":{"github":"https://github.com/Blizzard-cyber","twitter":"","stackoverflow":"https://stackoverflow.com/users/17709435/blizzard","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wan-meng-ci-yi-xi","csdn":"https://blog.csdn.net/qq_55751352?spm=1010.2135.3001.5343","juejin":"https://juejin.cn/user/1289054417332301","customs":{}}}}}